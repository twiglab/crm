// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ActivitiesColumns holds the columns for the "activities" table.
	ActivitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "code", Type: field.TypeString, Unique: true, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "mall_code", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "operator", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "activity_add_time", Type: field.TypeTime},
		{Name: "approver", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "activity_approve_time", Type: field.TypeTime},
		{Name: "principal", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "activity_name", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "activity_desc", Type: field.TypeString},
		{Name: "activity_budget", Type: field.TypeInt64},
		{Name: "activity_start_time", Type: field.TypeTime},
		{Name: "activity_end_time", Type: field.TypeTime},
		{Name: "activity_status", Type: field.TypeInt, Default: 1},
		{Name: "activity_type", Type: field.TypeInt, Default: 1},
	}
	// ActivitiesTable holds the schema information for the "activities" table.
	ActivitiesTable = &schema.Table{
		Name:       "activities",
		Columns:    ActivitiesColumns,
		PrimaryKey: []*schema.Column{ActivitiesColumns[0]},
	}
	// ActivityChangesColumns holds the columns for the "activity_changes" table.
	ActivityChangesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "code", Type: field.TypeString, Unique: true, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "activity_code", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "operator", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "submit_time", Type: field.TypeTime},
		{Name: "approver", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "approve_time", Type: field.TypeTime},
		{Name: "status", Type: field.TypeInt, Default: 1},
		{Name: "change_summary", Type: field.TypeString},
		{Name: "change_reason", Type: field.TypeString},
		{Name: "change_record", Type: field.TypeString, Size: 2147483647},
	}
	// ActivityChangesTable holds the schema information for the "activity_changes" table.
	ActivityChangesTable = &schema.Table{
		Name:       "activity_changes",
		Columns:    ActivityChangesColumns,
		PrimaryKey: []*schema.Column{ActivityChangesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActivitiesTable,
		ActivityChangesTable,
	}
)

func init() {
}
