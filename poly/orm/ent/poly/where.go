// Code generated by ent, DO NOT EDIT.

package poly

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/twiglab/crm/poly/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldUpdateTime, v))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldCode, v))
}

// MallCode applies equality check predicate on the "mall_code" field. It's identical to MallCodeEQ.
func MallCode(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldMallCode, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldName, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldTitle, v))
}

// Memo applies equality check predicate on the "memo" field. It's identical to MemoEQ.
func Memo(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldMemo, v))
}

// StartTime applies equality check predicate on the "start_time" field. It's identical to StartTimeEQ.
func StartTime(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldStartTime, v))
}

// EndTime applies equality check predicate on the "end_time" field. It's identical to EndTimeEQ.
func EndTime(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldEndTime, v))
}

// LogoPic applies equality check predicate on the "logo_pic" field. It's identical to LogoPicEQ.
func LogoPic(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldLogoPic, v))
}

// Pic1 applies equality check predicate on the "pic1" field. It's identical to Pic1EQ.
func Pic1(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldPic1, v))
}

// Pic2 applies equality check predicate on the "pic2" field. It's identical to Pic2EQ.
func Pic2(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldPic2, v))
}

// Pic3 applies equality check predicate on the "pic3" field. It's identical to Pic3EQ.
func Pic3(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldPic3, v))
}

// Menkan applies equality check predicate on the "menkan" field. It's identical to MenkanEQ.
func Menkan(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldMenkan, v))
}

// Fafang applies equality check predicate on the "fafang" field. It's identical to FafangEQ.
func Fafang(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldFafang, v))
}

// Xiaoqi applies equality check predicate on the "xiaoqi" field. It's identical to XiaoqiEQ.
func Xiaoqi(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldXiaoqi, v))
}

// Shiyong applies equality check predicate on the "shiyong" field. It's identical to ShiyongEQ.
func Shiyong(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldShiyong, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldStatus, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldType, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldUpdateTime, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldCode, v))
}

// MallCodeEQ applies the EQ predicate on the "mall_code" field.
func MallCodeEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldMallCode, v))
}

// MallCodeNEQ applies the NEQ predicate on the "mall_code" field.
func MallCodeNEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldMallCode, v))
}

// MallCodeIn applies the In predicate on the "mall_code" field.
func MallCodeIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldMallCode, vs...))
}

// MallCodeNotIn applies the NotIn predicate on the "mall_code" field.
func MallCodeNotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldMallCode, vs...))
}

// MallCodeGT applies the GT predicate on the "mall_code" field.
func MallCodeGT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldMallCode, v))
}

// MallCodeGTE applies the GTE predicate on the "mall_code" field.
func MallCodeGTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldMallCode, v))
}

// MallCodeLT applies the LT predicate on the "mall_code" field.
func MallCodeLT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldMallCode, v))
}

// MallCodeLTE applies the LTE predicate on the "mall_code" field.
func MallCodeLTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldMallCode, v))
}

// MallCodeContains applies the Contains predicate on the "mall_code" field.
func MallCodeContains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldMallCode, v))
}

// MallCodeHasPrefix applies the HasPrefix predicate on the "mall_code" field.
func MallCodeHasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldMallCode, v))
}

// MallCodeHasSuffix applies the HasSuffix predicate on the "mall_code" field.
func MallCodeHasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldMallCode, v))
}

// MallCodeEqualFold applies the EqualFold predicate on the "mall_code" field.
func MallCodeEqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldMallCode, v))
}

// MallCodeContainsFold applies the ContainsFold predicate on the "mall_code" field.
func MallCodeContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldMallCode, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldName, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldTitle, v))
}

// MemoEQ applies the EQ predicate on the "memo" field.
func MemoEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldMemo, v))
}

// MemoNEQ applies the NEQ predicate on the "memo" field.
func MemoNEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldMemo, v))
}

// MemoIn applies the In predicate on the "memo" field.
func MemoIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldMemo, vs...))
}

// MemoNotIn applies the NotIn predicate on the "memo" field.
func MemoNotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldMemo, vs...))
}

// MemoGT applies the GT predicate on the "memo" field.
func MemoGT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldMemo, v))
}

// MemoGTE applies the GTE predicate on the "memo" field.
func MemoGTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldMemo, v))
}

// MemoLT applies the LT predicate on the "memo" field.
func MemoLT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldMemo, v))
}

// MemoLTE applies the LTE predicate on the "memo" field.
func MemoLTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldMemo, v))
}

// MemoContains applies the Contains predicate on the "memo" field.
func MemoContains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldMemo, v))
}

// MemoHasPrefix applies the HasPrefix predicate on the "memo" field.
func MemoHasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldMemo, v))
}

// MemoHasSuffix applies the HasSuffix predicate on the "memo" field.
func MemoHasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldMemo, v))
}

// MemoEqualFold applies the EqualFold predicate on the "memo" field.
func MemoEqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldMemo, v))
}

// MemoContainsFold applies the ContainsFold predicate on the "memo" field.
func MemoContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldMemo, v))
}

// StartTimeEQ applies the EQ predicate on the "start_time" field.
func StartTimeEQ(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldStartTime, v))
}

// StartTimeNEQ applies the NEQ predicate on the "start_time" field.
func StartTimeNEQ(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldStartTime, v))
}

// StartTimeIn applies the In predicate on the "start_time" field.
func StartTimeIn(vs ...time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldStartTime, vs...))
}

// StartTimeNotIn applies the NotIn predicate on the "start_time" field.
func StartTimeNotIn(vs ...time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldStartTime, vs...))
}

// StartTimeGT applies the GT predicate on the "start_time" field.
func StartTimeGT(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldStartTime, v))
}

// StartTimeGTE applies the GTE predicate on the "start_time" field.
func StartTimeGTE(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldStartTime, v))
}

// StartTimeLT applies the LT predicate on the "start_time" field.
func StartTimeLT(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldStartTime, v))
}

// StartTimeLTE applies the LTE predicate on the "start_time" field.
func StartTimeLTE(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldStartTime, v))
}

// EndTimeEQ applies the EQ predicate on the "end_time" field.
func EndTimeEQ(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldEndTime, v))
}

// EndTimeNEQ applies the NEQ predicate on the "end_time" field.
func EndTimeNEQ(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldEndTime, v))
}

// EndTimeIn applies the In predicate on the "end_time" field.
func EndTimeIn(vs ...time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldEndTime, vs...))
}

// EndTimeNotIn applies the NotIn predicate on the "end_time" field.
func EndTimeNotIn(vs ...time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldEndTime, vs...))
}

// EndTimeGT applies the GT predicate on the "end_time" field.
func EndTimeGT(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldEndTime, v))
}

// EndTimeGTE applies the GTE predicate on the "end_time" field.
func EndTimeGTE(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldEndTime, v))
}

// EndTimeLT applies the LT predicate on the "end_time" field.
func EndTimeLT(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldEndTime, v))
}

// EndTimeLTE applies the LTE predicate on the "end_time" field.
func EndTimeLTE(v time.Time) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldEndTime, v))
}

// LogoPicEQ applies the EQ predicate on the "logo_pic" field.
func LogoPicEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldLogoPic, v))
}

// LogoPicNEQ applies the NEQ predicate on the "logo_pic" field.
func LogoPicNEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldLogoPic, v))
}

// LogoPicIn applies the In predicate on the "logo_pic" field.
func LogoPicIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldLogoPic, vs...))
}

// LogoPicNotIn applies the NotIn predicate on the "logo_pic" field.
func LogoPicNotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldLogoPic, vs...))
}

// LogoPicGT applies the GT predicate on the "logo_pic" field.
func LogoPicGT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldLogoPic, v))
}

// LogoPicGTE applies the GTE predicate on the "logo_pic" field.
func LogoPicGTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldLogoPic, v))
}

// LogoPicLT applies the LT predicate on the "logo_pic" field.
func LogoPicLT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldLogoPic, v))
}

// LogoPicLTE applies the LTE predicate on the "logo_pic" field.
func LogoPicLTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldLogoPic, v))
}

// LogoPicContains applies the Contains predicate on the "logo_pic" field.
func LogoPicContains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldLogoPic, v))
}

// LogoPicHasPrefix applies the HasPrefix predicate on the "logo_pic" field.
func LogoPicHasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldLogoPic, v))
}

// LogoPicHasSuffix applies the HasSuffix predicate on the "logo_pic" field.
func LogoPicHasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldLogoPic, v))
}

// LogoPicEqualFold applies the EqualFold predicate on the "logo_pic" field.
func LogoPicEqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldLogoPic, v))
}

// LogoPicContainsFold applies the ContainsFold predicate on the "logo_pic" field.
func LogoPicContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldLogoPic, v))
}

// Pic1EQ applies the EQ predicate on the "pic1" field.
func Pic1EQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldPic1, v))
}

// Pic1NEQ applies the NEQ predicate on the "pic1" field.
func Pic1NEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldPic1, v))
}

// Pic1In applies the In predicate on the "pic1" field.
func Pic1In(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldPic1, vs...))
}

// Pic1NotIn applies the NotIn predicate on the "pic1" field.
func Pic1NotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldPic1, vs...))
}

// Pic1GT applies the GT predicate on the "pic1" field.
func Pic1GT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldPic1, v))
}

// Pic1GTE applies the GTE predicate on the "pic1" field.
func Pic1GTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldPic1, v))
}

// Pic1LT applies the LT predicate on the "pic1" field.
func Pic1LT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldPic1, v))
}

// Pic1LTE applies the LTE predicate on the "pic1" field.
func Pic1LTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldPic1, v))
}

// Pic1Contains applies the Contains predicate on the "pic1" field.
func Pic1Contains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldPic1, v))
}

// Pic1HasPrefix applies the HasPrefix predicate on the "pic1" field.
func Pic1HasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldPic1, v))
}

// Pic1HasSuffix applies the HasSuffix predicate on the "pic1" field.
func Pic1HasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldPic1, v))
}

// Pic1EqualFold applies the EqualFold predicate on the "pic1" field.
func Pic1EqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldPic1, v))
}

// Pic1ContainsFold applies the ContainsFold predicate on the "pic1" field.
func Pic1ContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldPic1, v))
}

// Pic2EQ applies the EQ predicate on the "pic2" field.
func Pic2EQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldPic2, v))
}

// Pic2NEQ applies the NEQ predicate on the "pic2" field.
func Pic2NEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldPic2, v))
}

// Pic2In applies the In predicate on the "pic2" field.
func Pic2In(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldPic2, vs...))
}

// Pic2NotIn applies the NotIn predicate on the "pic2" field.
func Pic2NotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldPic2, vs...))
}

// Pic2GT applies the GT predicate on the "pic2" field.
func Pic2GT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldPic2, v))
}

// Pic2GTE applies the GTE predicate on the "pic2" field.
func Pic2GTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldPic2, v))
}

// Pic2LT applies the LT predicate on the "pic2" field.
func Pic2LT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldPic2, v))
}

// Pic2LTE applies the LTE predicate on the "pic2" field.
func Pic2LTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldPic2, v))
}

// Pic2Contains applies the Contains predicate on the "pic2" field.
func Pic2Contains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldPic2, v))
}

// Pic2HasPrefix applies the HasPrefix predicate on the "pic2" field.
func Pic2HasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldPic2, v))
}

// Pic2HasSuffix applies the HasSuffix predicate on the "pic2" field.
func Pic2HasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldPic2, v))
}

// Pic2EqualFold applies the EqualFold predicate on the "pic2" field.
func Pic2EqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldPic2, v))
}

// Pic2ContainsFold applies the ContainsFold predicate on the "pic2" field.
func Pic2ContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldPic2, v))
}

// Pic3EQ applies the EQ predicate on the "pic3" field.
func Pic3EQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldPic3, v))
}

// Pic3NEQ applies the NEQ predicate on the "pic3" field.
func Pic3NEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldPic3, v))
}

// Pic3In applies the In predicate on the "pic3" field.
func Pic3In(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldPic3, vs...))
}

// Pic3NotIn applies the NotIn predicate on the "pic3" field.
func Pic3NotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldPic3, vs...))
}

// Pic3GT applies the GT predicate on the "pic3" field.
func Pic3GT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldPic3, v))
}

// Pic3GTE applies the GTE predicate on the "pic3" field.
func Pic3GTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldPic3, v))
}

// Pic3LT applies the LT predicate on the "pic3" field.
func Pic3LT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldPic3, v))
}

// Pic3LTE applies the LTE predicate on the "pic3" field.
func Pic3LTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldPic3, v))
}

// Pic3Contains applies the Contains predicate on the "pic3" field.
func Pic3Contains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldPic3, v))
}

// Pic3HasPrefix applies the HasPrefix predicate on the "pic3" field.
func Pic3HasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldPic3, v))
}

// Pic3HasSuffix applies the HasSuffix predicate on the "pic3" field.
func Pic3HasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldPic3, v))
}

// Pic3EqualFold applies the EqualFold predicate on the "pic3" field.
func Pic3EqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldPic3, v))
}

// Pic3ContainsFold applies the ContainsFold predicate on the "pic3" field.
func Pic3ContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldPic3, v))
}

// MenkanEQ applies the EQ predicate on the "menkan" field.
func MenkanEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldMenkan, v))
}

// MenkanNEQ applies the NEQ predicate on the "menkan" field.
func MenkanNEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldMenkan, v))
}

// MenkanIn applies the In predicate on the "menkan" field.
func MenkanIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldMenkan, vs...))
}

// MenkanNotIn applies the NotIn predicate on the "menkan" field.
func MenkanNotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldMenkan, vs...))
}

// MenkanGT applies the GT predicate on the "menkan" field.
func MenkanGT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldMenkan, v))
}

// MenkanGTE applies the GTE predicate on the "menkan" field.
func MenkanGTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldMenkan, v))
}

// MenkanLT applies the LT predicate on the "menkan" field.
func MenkanLT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldMenkan, v))
}

// MenkanLTE applies the LTE predicate on the "menkan" field.
func MenkanLTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldMenkan, v))
}

// MenkanContains applies the Contains predicate on the "menkan" field.
func MenkanContains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldMenkan, v))
}

// MenkanHasPrefix applies the HasPrefix predicate on the "menkan" field.
func MenkanHasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldMenkan, v))
}

// MenkanHasSuffix applies the HasSuffix predicate on the "menkan" field.
func MenkanHasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldMenkan, v))
}

// MenkanEqualFold applies the EqualFold predicate on the "menkan" field.
func MenkanEqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldMenkan, v))
}

// MenkanContainsFold applies the ContainsFold predicate on the "menkan" field.
func MenkanContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldMenkan, v))
}

// FafangEQ applies the EQ predicate on the "fafang" field.
func FafangEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldFafang, v))
}

// FafangNEQ applies the NEQ predicate on the "fafang" field.
func FafangNEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldFafang, v))
}

// FafangIn applies the In predicate on the "fafang" field.
func FafangIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldFafang, vs...))
}

// FafangNotIn applies the NotIn predicate on the "fafang" field.
func FafangNotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldFafang, vs...))
}

// FafangGT applies the GT predicate on the "fafang" field.
func FafangGT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldFafang, v))
}

// FafangGTE applies the GTE predicate on the "fafang" field.
func FafangGTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldFafang, v))
}

// FafangLT applies the LT predicate on the "fafang" field.
func FafangLT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldFafang, v))
}

// FafangLTE applies the LTE predicate on the "fafang" field.
func FafangLTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldFafang, v))
}

// FafangContains applies the Contains predicate on the "fafang" field.
func FafangContains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldFafang, v))
}

// FafangHasPrefix applies the HasPrefix predicate on the "fafang" field.
func FafangHasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldFafang, v))
}

// FafangHasSuffix applies the HasSuffix predicate on the "fafang" field.
func FafangHasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldFafang, v))
}

// FafangEqualFold applies the EqualFold predicate on the "fafang" field.
func FafangEqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldFafang, v))
}

// FafangContainsFold applies the ContainsFold predicate on the "fafang" field.
func FafangContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldFafang, v))
}

// XiaoqiEQ applies the EQ predicate on the "xiaoqi" field.
func XiaoqiEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldXiaoqi, v))
}

// XiaoqiNEQ applies the NEQ predicate on the "xiaoqi" field.
func XiaoqiNEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldXiaoqi, v))
}

// XiaoqiIn applies the In predicate on the "xiaoqi" field.
func XiaoqiIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldXiaoqi, vs...))
}

// XiaoqiNotIn applies the NotIn predicate on the "xiaoqi" field.
func XiaoqiNotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldXiaoqi, vs...))
}

// XiaoqiGT applies the GT predicate on the "xiaoqi" field.
func XiaoqiGT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldXiaoqi, v))
}

// XiaoqiGTE applies the GTE predicate on the "xiaoqi" field.
func XiaoqiGTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldXiaoqi, v))
}

// XiaoqiLT applies the LT predicate on the "xiaoqi" field.
func XiaoqiLT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldXiaoqi, v))
}

// XiaoqiLTE applies the LTE predicate on the "xiaoqi" field.
func XiaoqiLTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldXiaoqi, v))
}

// XiaoqiContains applies the Contains predicate on the "xiaoqi" field.
func XiaoqiContains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldXiaoqi, v))
}

// XiaoqiHasPrefix applies the HasPrefix predicate on the "xiaoqi" field.
func XiaoqiHasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldXiaoqi, v))
}

// XiaoqiHasSuffix applies the HasSuffix predicate on the "xiaoqi" field.
func XiaoqiHasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldXiaoqi, v))
}

// XiaoqiEqualFold applies the EqualFold predicate on the "xiaoqi" field.
func XiaoqiEqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldXiaoqi, v))
}

// XiaoqiContainsFold applies the ContainsFold predicate on the "xiaoqi" field.
func XiaoqiContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldXiaoqi, v))
}

// ShiyongEQ applies the EQ predicate on the "shiyong" field.
func ShiyongEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldShiyong, v))
}

// ShiyongNEQ applies the NEQ predicate on the "shiyong" field.
func ShiyongNEQ(v string) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldShiyong, v))
}

// ShiyongIn applies the In predicate on the "shiyong" field.
func ShiyongIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldShiyong, vs...))
}

// ShiyongNotIn applies the NotIn predicate on the "shiyong" field.
func ShiyongNotIn(vs ...string) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldShiyong, vs...))
}

// ShiyongGT applies the GT predicate on the "shiyong" field.
func ShiyongGT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldShiyong, v))
}

// ShiyongGTE applies the GTE predicate on the "shiyong" field.
func ShiyongGTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldShiyong, v))
}

// ShiyongLT applies the LT predicate on the "shiyong" field.
func ShiyongLT(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldShiyong, v))
}

// ShiyongLTE applies the LTE predicate on the "shiyong" field.
func ShiyongLTE(v string) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldShiyong, v))
}

// ShiyongContains applies the Contains predicate on the "shiyong" field.
func ShiyongContains(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContains(FieldShiyong, v))
}

// ShiyongHasPrefix applies the HasPrefix predicate on the "shiyong" field.
func ShiyongHasPrefix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasPrefix(FieldShiyong, v))
}

// ShiyongHasSuffix applies the HasSuffix predicate on the "shiyong" field.
func ShiyongHasSuffix(v string) predicate.Poly {
	return predicate.Poly(sql.FieldHasSuffix(FieldShiyong, v))
}

// ShiyongEqualFold applies the EqualFold predicate on the "shiyong" field.
func ShiyongEqualFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldEqualFold(FieldShiyong, v))
}

// ShiyongContainsFold applies the ContainsFold predicate on the "shiyong" field.
func ShiyongContainsFold(v string) predicate.Poly {
	return predicate.Poly(sql.FieldContainsFold(FieldShiyong, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int32) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int32) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldStatus, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...int32) predicate.Poly {
	return predicate.Poly(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...int32) predicate.Poly {
	return predicate.Poly(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v int32) predicate.Poly {
	return predicate.Poly(sql.FieldLTE(FieldType, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Poly) predicate.Poly {
	return predicate.Poly(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Poly) predicate.Poly {
	return predicate.Poly(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Poly) predicate.Poly {
	return predicate.Poly(sql.NotPredicates(p))
}
