// Code generated by ent, DO NOT EDIT.

package activity

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/twiglab/crm/poly/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldID, id))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldCode, v))
}

// MallCode applies equality check predicate on the "mall_code" field. It's identical to MallCodeEQ.
func MallCode(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldMallCode, v))
}

// Operator applies equality check predicate on the "operator" field. It's identical to OperatorEQ.
func Operator(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldOperator, v))
}

// ActivityAddTime applies equality check predicate on the "activity_add_time" field. It's identical to ActivityAddTimeEQ.
func ActivityAddTime(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityAddTime, v))
}

// Approver applies equality check predicate on the "approver" field. It's identical to ApproverEQ.
func Approver(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldApprover, v))
}

// ActivityApproveTime applies equality check predicate on the "activity_approve_time" field. It's identical to ActivityApproveTimeEQ.
func ActivityApproveTime(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityApproveTime, v))
}

// Principal applies equality check predicate on the "principal" field. It's identical to PrincipalEQ.
func Principal(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldPrincipal, v))
}

// ActivityName applies equality check predicate on the "activity_name" field. It's identical to ActivityNameEQ.
func ActivityName(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityName, v))
}

// ActivityDesc applies equality check predicate on the "activity_desc" field. It's identical to ActivityDescEQ.
func ActivityDesc(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityDesc, v))
}

// ActivityBudget applies equality check predicate on the "activity_budget" field. It's identical to ActivityBudgetEQ.
func ActivityBudget(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityBudget, v))
}

// ActivityStartTime applies equality check predicate on the "activity_start_time" field. It's identical to ActivityStartTimeEQ.
func ActivityStartTime(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityStartTime, v))
}

// ActivityEndTime applies equality check predicate on the "activity_end_time" field. It's identical to ActivityEndTimeEQ.
func ActivityEndTime(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityEndTime, v))
}

// ActivityStatus applies equality check predicate on the "activity_status" field. It's identical to ActivityStatusEQ.
func ActivityStatus(v int) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityStatus, v))
}

// ActivityType applies equality check predicate on the "activity_type" field. It's identical to ActivityTypeEQ.
func ActivityType(v int) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityType, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldCode, v))
}

// MallCodeEQ applies the EQ predicate on the "mall_code" field.
func MallCodeEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldMallCode, v))
}

// MallCodeNEQ applies the NEQ predicate on the "mall_code" field.
func MallCodeNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldMallCode, v))
}

// MallCodeIn applies the In predicate on the "mall_code" field.
func MallCodeIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldMallCode, vs...))
}

// MallCodeNotIn applies the NotIn predicate on the "mall_code" field.
func MallCodeNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldMallCode, vs...))
}

// MallCodeGT applies the GT predicate on the "mall_code" field.
func MallCodeGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldMallCode, v))
}

// MallCodeGTE applies the GTE predicate on the "mall_code" field.
func MallCodeGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldMallCode, v))
}

// MallCodeLT applies the LT predicate on the "mall_code" field.
func MallCodeLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldMallCode, v))
}

// MallCodeLTE applies the LTE predicate on the "mall_code" field.
func MallCodeLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldMallCode, v))
}

// MallCodeContains applies the Contains predicate on the "mall_code" field.
func MallCodeContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldMallCode, v))
}

// MallCodeHasPrefix applies the HasPrefix predicate on the "mall_code" field.
func MallCodeHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldMallCode, v))
}

// MallCodeHasSuffix applies the HasSuffix predicate on the "mall_code" field.
func MallCodeHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldMallCode, v))
}

// MallCodeEqualFold applies the EqualFold predicate on the "mall_code" field.
func MallCodeEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldMallCode, v))
}

// MallCodeContainsFold applies the ContainsFold predicate on the "mall_code" field.
func MallCodeContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldMallCode, v))
}

// OperatorEQ applies the EQ predicate on the "operator" field.
func OperatorEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldOperator, v))
}

// OperatorNEQ applies the NEQ predicate on the "operator" field.
func OperatorNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldOperator, v))
}

// OperatorIn applies the In predicate on the "operator" field.
func OperatorIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldOperator, vs...))
}

// OperatorNotIn applies the NotIn predicate on the "operator" field.
func OperatorNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldOperator, vs...))
}

// OperatorGT applies the GT predicate on the "operator" field.
func OperatorGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldOperator, v))
}

// OperatorGTE applies the GTE predicate on the "operator" field.
func OperatorGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldOperator, v))
}

// OperatorLT applies the LT predicate on the "operator" field.
func OperatorLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldOperator, v))
}

// OperatorLTE applies the LTE predicate on the "operator" field.
func OperatorLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldOperator, v))
}

// OperatorContains applies the Contains predicate on the "operator" field.
func OperatorContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldOperator, v))
}

// OperatorHasPrefix applies the HasPrefix predicate on the "operator" field.
func OperatorHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldOperator, v))
}

// OperatorHasSuffix applies the HasSuffix predicate on the "operator" field.
func OperatorHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldOperator, v))
}

// OperatorEqualFold applies the EqualFold predicate on the "operator" field.
func OperatorEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldOperator, v))
}

// OperatorContainsFold applies the ContainsFold predicate on the "operator" field.
func OperatorContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldOperator, v))
}

// ActivityAddTimeEQ applies the EQ predicate on the "activity_add_time" field.
func ActivityAddTimeEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityAddTime, v))
}

// ActivityAddTimeNEQ applies the NEQ predicate on the "activity_add_time" field.
func ActivityAddTimeNEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldActivityAddTime, v))
}

// ActivityAddTimeIn applies the In predicate on the "activity_add_time" field.
func ActivityAddTimeIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldActivityAddTime, vs...))
}

// ActivityAddTimeNotIn applies the NotIn predicate on the "activity_add_time" field.
func ActivityAddTimeNotIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldActivityAddTime, vs...))
}

// ActivityAddTimeGT applies the GT predicate on the "activity_add_time" field.
func ActivityAddTimeGT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldActivityAddTime, v))
}

// ActivityAddTimeGTE applies the GTE predicate on the "activity_add_time" field.
func ActivityAddTimeGTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldActivityAddTime, v))
}

// ActivityAddTimeLT applies the LT predicate on the "activity_add_time" field.
func ActivityAddTimeLT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldActivityAddTime, v))
}

// ActivityAddTimeLTE applies the LTE predicate on the "activity_add_time" field.
func ActivityAddTimeLTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldActivityAddTime, v))
}

// ApproverEQ applies the EQ predicate on the "approver" field.
func ApproverEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldApprover, v))
}

// ApproverNEQ applies the NEQ predicate on the "approver" field.
func ApproverNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldApprover, v))
}

// ApproverIn applies the In predicate on the "approver" field.
func ApproverIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldApprover, vs...))
}

// ApproverNotIn applies the NotIn predicate on the "approver" field.
func ApproverNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldApprover, vs...))
}

// ApproverGT applies the GT predicate on the "approver" field.
func ApproverGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldApprover, v))
}

// ApproverGTE applies the GTE predicate on the "approver" field.
func ApproverGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldApprover, v))
}

// ApproverLT applies the LT predicate on the "approver" field.
func ApproverLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldApprover, v))
}

// ApproverLTE applies the LTE predicate on the "approver" field.
func ApproverLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldApprover, v))
}

// ApproverContains applies the Contains predicate on the "approver" field.
func ApproverContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldApprover, v))
}

// ApproverHasPrefix applies the HasPrefix predicate on the "approver" field.
func ApproverHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldApprover, v))
}

// ApproverHasSuffix applies the HasSuffix predicate on the "approver" field.
func ApproverHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldApprover, v))
}

// ApproverEqualFold applies the EqualFold predicate on the "approver" field.
func ApproverEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldApprover, v))
}

// ApproverContainsFold applies the ContainsFold predicate on the "approver" field.
func ApproverContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldApprover, v))
}

// ActivityApproveTimeEQ applies the EQ predicate on the "activity_approve_time" field.
func ActivityApproveTimeEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityApproveTime, v))
}

// ActivityApproveTimeNEQ applies the NEQ predicate on the "activity_approve_time" field.
func ActivityApproveTimeNEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldActivityApproveTime, v))
}

// ActivityApproveTimeIn applies the In predicate on the "activity_approve_time" field.
func ActivityApproveTimeIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldActivityApproveTime, vs...))
}

// ActivityApproveTimeNotIn applies the NotIn predicate on the "activity_approve_time" field.
func ActivityApproveTimeNotIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldActivityApproveTime, vs...))
}

// ActivityApproveTimeGT applies the GT predicate on the "activity_approve_time" field.
func ActivityApproveTimeGT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldActivityApproveTime, v))
}

// ActivityApproveTimeGTE applies the GTE predicate on the "activity_approve_time" field.
func ActivityApproveTimeGTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldActivityApproveTime, v))
}

// ActivityApproveTimeLT applies the LT predicate on the "activity_approve_time" field.
func ActivityApproveTimeLT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldActivityApproveTime, v))
}

// ActivityApproveTimeLTE applies the LTE predicate on the "activity_approve_time" field.
func ActivityApproveTimeLTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldActivityApproveTime, v))
}

// PrincipalEQ applies the EQ predicate on the "principal" field.
func PrincipalEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldPrincipal, v))
}

// PrincipalNEQ applies the NEQ predicate on the "principal" field.
func PrincipalNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldPrincipal, v))
}

// PrincipalIn applies the In predicate on the "principal" field.
func PrincipalIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldPrincipal, vs...))
}

// PrincipalNotIn applies the NotIn predicate on the "principal" field.
func PrincipalNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldPrincipal, vs...))
}

// PrincipalGT applies the GT predicate on the "principal" field.
func PrincipalGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldPrincipal, v))
}

// PrincipalGTE applies the GTE predicate on the "principal" field.
func PrincipalGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldPrincipal, v))
}

// PrincipalLT applies the LT predicate on the "principal" field.
func PrincipalLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldPrincipal, v))
}

// PrincipalLTE applies the LTE predicate on the "principal" field.
func PrincipalLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldPrincipal, v))
}

// PrincipalContains applies the Contains predicate on the "principal" field.
func PrincipalContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldPrincipal, v))
}

// PrincipalHasPrefix applies the HasPrefix predicate on the "principal" field.
func PrincipalHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldPrincipal, v))
}

// PrincipalHasSuffix applies the HasSuffix predicate on the "principal" field.
func PrincipalHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldPrincipal, v))
}

// PrincipalEqualFold applies the EqualFold predicate on the "principal" field.
func PrincipalEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldPrincipal, v))
}

// PrincipalContainsFold applies the ContainsFold predicate on the "principal" field.
func PrincipalContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldPrincipal, v))
}

// ActivityNameEQ applies the EQ predicate on the "activity_name" field.
func ActivityNameEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityName, v))
}

// ActivityNameNEQ applies the NEQ predicate on the "activity_name" field.
func ActivityNameNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldActivityName, v))
}

// ActivityNameIn applies the In predicate on the "activity_name" field.
func ActivityNameIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldActivityName, vs...))
}

// ActivityNameNotIn applies the NotIn predicate on the "activity_name" field.
func ActivityNameNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldActivityName, vs...))
}

// ActivityNameGT applies the GT predicate on the "activity_name" field.
func ActivityNameGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldActivityName, v))
}

// ActivityNameGTE applies the GTE predicate on the "activity_name" field.
func ActivityNameGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldActivityName, v))
}

// ActivityNameLT applies the LT predicate on the "activity_name" field.
func ActivityNameLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldActivityName, v))
}

// ActivityNameLTE applies the LTE predicate on the "activity_name" field.
func ActivityNameLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldActivityName, v))
}

// ActivityNameContains applies the Contains predicate on the "activity_name" field.
func ActivityNameContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldActivityName, v))
}

// ActivityNameHasPrefix applies the HasPrefix predicate on the "activity_name" field.
func ActivityNameHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldActivityName, v))
}

// ActivityNameHasSuffix applies the HasSuffix predicate on the "activity_name" field.
func ActivityNameHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldActivityName, v))
}

// ActivityNameEqualFold applies the EqualFold predicate on the "activity_name" field.
func ActivityNameEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldActivityName, v))
}

// ActivityNameContainsFold applies the ContainsFold predicate on the "activity_name" field.
func ActivityNameContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldActivityName, v))
}

// ActivityDescEQ applies the EQ predicate on the "activity_desc" field.
func ActivityDescEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityDesc, v))
}

// ActivityDescNEQ applies the NEQ predicate on the "activity_desc" field.
func ActivityDescNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldActivityDesc, v))
}

// ActivityDescIn applies the In predicate on the "activity_desc" field.
func ActivityDescIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldActivityDesc, vs...))
}

// ActivityDescNotIn applies the NotIn predicate on the "activity_desc" field.
func ActivityDescNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldActivityDesc, vs...))
}

// ActivityDescGT applies the GT predicate on the "activity_desc" field.
func ActivityDescGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldActivityDesc, v))
}

// ActivityDescGTE applies the GTE predicate on the "activity_desc" field.
func ActivityDescGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldActivityDesc, v))
}

// ActivityDescLT applies the LT predicate on the "activity_desc" field.
func ActivityDescLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldActivityDesc, v))
}

// ActivityDescLTE applies the LTE predicate on the "activity_desc" field.
func ActivityDescLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldActivityDesc, v))
}

// ActivityDescContains applies the Contains predicate on the "activity_desc" field.
func ActivityDescContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldActivityDesc, v))
}

// ActivityDescHasPrefix applies the HasPrefix predicate on the "activity_desc" field.
func ActivityDescHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldActivityDesc, v))
}

// ActivityDescHasSuffix applies the HasSuffix predicate on the "activity_desc" field.
func ActivityDescHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldActivityDesc, v))
}

// ActivityDescEqualFold applies the EqualFold predicate on the "activity_desc" field.
func ActivityDescEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldActivityDesc, v))
}

// ActivityDescContainsFold applies the ContainsFold predicate on the "activity_desc" field.
func ActivityDescContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldActivityDesc, v))
}

// ActivityBudgetEQ applies the EQ predicate on the "activity_budget" field.
func ActivityBudgetEQ(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityBudget, v))
}

// ActivityBudgetNEQ applies the NEQ predicate on the "activity_budget" field.
func ActivityBudgetNEQ(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldActivityBudget, v))
}

// ActivityBudgetIn applies the In predicate on the "activity_budget" field.
func ActivityBudgetIn(vs ...int64) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldActivityBudget, vs...))
}

// ActivityBudgetNotIn applies the NotIn predicate on the "activity_budget" field.
func ActivityBudgetNotIn(vs ...int64) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldActivityBudget, vs...))
}

// ActivityBudgetGT applies the GT predicate on the "activity_budget" field.
func ActivityBudgetGT(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldActivityBudget, v))
}

// ActivityBudgetGTE applies the GTE predicate on the "activity_budget" field.
func ActivityBudgetGTE(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldActivityBudget, v))
}

// ActivityBudgetLT applies the LT predicate on the "activity_budget" field.
func ActivityBudgetLT(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldActivityBudget, v))
}

// ActivityBudgetLTE applies the LTE predicate on the "activity_budget" field.
func ActivityBudgetLTE(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldActivityBudget, v))
}

// ActivityStartTimeEQ applies the EQ predicate on the "activity_start_time" field.
func ActivityStartTimeEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityStartTime, v))
}

// ActivityStartTimeNEQ applies the NEQ predicate on the "activity_start_time" field.
func ActivityStartTimeNEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldActivityStartTime, v))
}

// ActivityStartTimeIn applies the In predicate on the "activity_start_time" field.
func ActivityStartTimeIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldActivityStartTime, vs...))
}

// ActivityStartTimeNotIn applies the NotIn predicate on the "activity_start_time" field.
func ActivityStartTimeNotIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldActivityStartTime, vs...))
}

// ActivityStartTimeGT applies the GT predicate on the "activity_start_time" field.
func ActivityStartTimeGT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldActivityStartTime, v))
}

// ActivityStartTimeGTE applies the GTE predicate on the "activity_start_time" field.
func ActivityStartTimeGTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldActivityStartTime, v))
}

// ActivityStartTimeLT applies the LT predicate on the "activity_start_time" field.
func ActivityStartTimeLT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldActivityStartTime, v))
}

// ActivityStartTimeLTE applies the LTE predicate on the "activity_start_time" field.
func ActivityStartTimeLTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldActivityStartTime, v))
}

// ActivityEndTimeEQ applies the EQ predicate on the "activity_end_time" field.
func ActivityEndTimeEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityEndTime, v))
}

// ActivityEndTimeNEQ applies the NEQ predicate on the "activity_end_time" field.
func ActivityEndTimeNEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldActivityEndTime, v))
}

// ActivityEndTimeIn applies the In predicate on the "activity_end_time" field.
func ActivityEndTimeIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldActivityEndTime, vs...))
}

// ActivityEndTimeNotIn applies the NotIn predicate on the "activity_end_time" field.
func ActivityEndTimeNotIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldActivityEndTime, vs...))
}

// ActivityEndTimeGT applies the GT predicate on the "activity_end_time" field.
func ActivityEndTimeGT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldActivityEndTime, v))
}

// ActivityEndTimeGTE applies the GTE predicate on the "activity_end_time" field.
func ActivityEndTimeGTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldActivityEndTime, v))
}

// ActivityEndTimeLT applies the LT predicate on the "activity_end_time" field.
func ActivityEndTimeLT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldActivityEndTime, v))
}

// ActivityEndTimeLTE applies the LTE predicate on the "activity_end_time" field.
func ActivityEndTimeLTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldActivityEndTime, v))
}

// ActivityStatusEQ applies the EQ predicate on the "activity_status" field.
func ActivityStatusEQ(v int) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityStatus, v))
}

// ActivityStatusNEQ applies the NEQ predicate on the "activity_status" field.
func ActivityStatusNEQ(v int) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldActivityStatus, v))
}

// ActivityStatusIn applies the In predicate on the "activity_status" field.
func ActivityStatusIn(vs ...int) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldActivityStatus, vs...))
}

// ActivityStatusNotIn applies the NotIn predicate on the "activity_status" field.
func ActivityStatusNotIn(vs ...int) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldActivityStatus, vs...))
}

// ActivityStatusGT applies the GT predicate on the "activity_status" field.
func ActivityStatusGT(v int) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldActivityStatus, v))
}

// ActivityStatusGTE applies the GTE predicate on the "activity_status" field.
func ActivityStatusGTE(v int) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldActivityStatus, v))
}

// ActivityStatusLT applies the LT predicate on the "activity_status" field.
func ActivityStatusLT(v int) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldActivityStatus, v))
}

// ActivityStatusLTE applies the LTE predicate on the "activity_status" field.
func ActivityStatusLTE(v int) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldActivityStatus, v))
}

// ActivityTypeEQ applies the EQ predicate on the "activity_type" field.
func ActivityTypeEQ(v int) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActivityType, v))
}

// ActivityTypeNEQ applies the NEQ predicate on the "activity_type" field.
func ActivityTypeNEQ(v int) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldActivityType, v))
}

// ActivityTypeIn applies the In predicate on the "activity_type" field.
func ActivityTypeIn(vs ...int) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldActivityType, vs...))
}

// ActivityTypeNotIn applies the NotIn predicate on the "activity_type" field.
func ActivityTypeNotIn(vs ...int) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldActivityType, vs...))
}

// ActivityTypeGT applies the GT predicate on the "activity_type" field.
func ActivityTypeGT(v int) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldActivityType, v))
}

// ActivityTypeGTE applies the GTE predicate on the "activity_type" field.
func ActivityTypeGTE(v int) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldActivityType, v))
}

// ActivityTypeLT applies the LT predicate on the "activity_type" field.
func ActivityTypeLT(v int) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldActivityType, v))
}

// ActivityTypeLTE applies the LTE predicate on the "activity_type" field.
func ActivityTypeLTE(v int) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldActivityType, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Activity) predicate.Activity {
	return predicate.Activity(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Activity) predicate.Activity {
	return predicate.Activity(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Activity) predicate.Activity {
	return predicate.Activity(sql.NotPredicates(p))
}
