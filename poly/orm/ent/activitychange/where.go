// Code generated by ent, DO NOT EDIT.

package activitychange

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/twiglab/crm/poly/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLTE(FieldID, id))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldCode, v))
}

// ActivityCode applies equality check predicate on the "activity_code" field. It's identical to ActivityCodeEQ.
func ActivityCode(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldActivityCode, v))
}

// Operator applies equality check predicate on the "operator" field. It's identical to OperatorEQ.
func Operator(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldOperator, v))
}

// SubmitTime applies equality check predicate on the "submit_time" field. It's identical to SubmitTimeEQ.
func SubmitTime(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldSubmitTime, v))
}

// Approver applies equality check predicate on the "approver" field. It's identical to ApproverEQ.
func Approver(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldApprover, v))
}

// ApproveTime applies equality check predicate on the "approve_time" field. It's identical to ApproveTimeEQ.
func ApproveTime(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldApproveTime, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldStatus, v))
}

// ChangeSummary applies equality check predicate on the "change_summary" field. It's identical to ChangeSummaryEQ.
func ChangeSummary(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldChangeSummary, v))
}

// ChangeReason applies equality check predicate on the "change_reason" field. It's identical to ChangeReasonEQ.
func ChangeReason(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldChangeReason, v))
}

// ChangeRecord applies equality check predicate on the "change_record" field. It's identical to ChangeRecordEQ.
func ChangeRecord(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldChangeRecord, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContainsFold(FieldCode, v))
}

// ActivityCodeEQ applies the EQ predicate on the "activity_code" field.
func ActivityCodeEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldActivityCode, v))
}

// ActivityCodeNEQ applies the NEQ predicate on the "activity_code" field.
func ActivityCodeNEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNEQ(FieldActivityCode, v))
}

// ActivityCodeIn applies the In predicate on the "activity_code" field.
func ActivityCodeIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldIn(FieldActivityCode, vs...))
}

// ActivityCodeNotIn applies the NotIn predicate on the "activity_code" field.
func ActivityCodeNotIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNotIn(FieldActivityCode, vs...))
}

// ActivityCodeGT applies the GT predicate on the "activity_code" field.
func ActivityCodeGT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGT(FieldActivityCode, v))
}

// ActivityCodeGTE applies the GTE predicate on the "activity_code" field.
func ActivityCodeGTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGTE(FieldActivityCode, v))
}

// ActivityCodeLT applies the LT predicate on the "activity_code" field.
func ActivityCodeLT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLT(FieldActivityCode, v))
}

// ActivityCodeLTE applies the LTE predicate on the "activity_code" field.
func ActivityCodeLTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLTE(FieldActivityCode, v))
}

// ActivityCodeContains applies the Contains predicate on the "activity_code" field.
func ActivityCodeContains(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContains(FieldActivityCode, v))
}

// ActivityCodeHasPrefix applies the HasPrefix predicate on the "activity_code" field.
func ActivityCodeHasPrefix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasPrefix(FieldActivityCode, v))
}

// ActivityCodeHasSuffix applies the HasSuffix predicate on the "activity_code" field.
func ActivityCodeHasSuffix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasSuffix(FieldActivityCode, v))
}

// ActivityCodeEqualFold applies the EqualFold predicate on the "activity_code" field.
func ActivityCodeEqualFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEqualFold(FieldActivityCode, v))
}

// ActivityCodeContainsFold applies the ContainsFold predicate on the "activity_code" field.
func ActivityCodeContainsFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContainsFold(FieldActivityCode, v))
}

// OperatorEQ applies the EQ predicate on the "operator" field.
func OperatorEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldOperator, v))
}

// OperatorNEQ applies the NEQ predicate on the "operator" field.
func OperatorNEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNEQ(FieldOperator, v))
}

// OperatorIn applies the In predicate on the "operator" field.
func OperatorIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldIn(FieldOperator, vs...))
}

// OperatorNotIn applies the NotIn predicate on the "operator" field.
func OperatorNotIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNotIn(FieldOperator, vs...))
}

// OperatorGT applies the GT predicate on the "operator" field.
func OperatorGT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGT(FieldOperator, v))
}

// OperatorGTE applies the GTE predicate on the "operator" field.
func OperatorGTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGTE(FieldOperator, v))
}

// OperatorLT applies the LT predicate on the "operator" field.
func OperatorLT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLT(FieldOperator, v))
}

// OperatorLTE applies the LTE predicate on the "operator" field.
func OperatorLTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLTE(FieldOperator, v))
}

// OperatorContains applies the Contains predicate on the "operator" field.
func OperatorContains(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContains(FieldOperator, v))
}

// OperatorHasPrefix applies the HasPrefix predicate on the "operator" field.
func OperatorHasPrefix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasPrefix(FieldOperator, v))
}

// OperatorHasSuffix applies the HasSuffix predicate on the "operator" field.
func OperatorHasSuffix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasSuffix(FieldOperator, v))
}

// OperatorEqualFold applies the EqualFold predicate on the "operator" field.
func OperatorEqualFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEqualFold(FieldOperator, v))
}

// OperatorContainsFold applies the ContainsFold predicate on the "operator" field.
func OperatorContainsFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContainsFold(FieldOperator, v))
}

// SubmitTimeEQ applies the EQ predicate on the "submit_time" field.
func SubmitTimeEQ(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldSubmitTime, v))
}

// SubmitTimeNEQ applies the NEQ predicate on the "submit_time" field.
func SubmitTimeNEQ(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNEQ(FieldSubmitTime, v))
}

// SubmitTimeIn applies the In predicate on the "submit_time" field.
func SubmitTimeIn(vs ...time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldIn(FieldSubmitTime, vs...))
}

// SubmitTimeNotIn applies the NotIn predicate on the "submit_time" field.
func SubmitTimeNotIn(vs ...time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNotIn(FieldSubmitTime, vs...))
}

// SubmitTimeGT applies the GT predicate on the "submit_time" field.
func SubmitTimeGT(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGT(FieldSubmitTime, v))
}

// SubmitTimeGTE applies the GTE predicate on the "submit_time" field.
func SubmitTimeGTE(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGTE(FieldSubmitTime, v))
}

// SubmitTimeLT applies the LT predicate on the "submit_time" field.
func SubmitTimeLT(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLT(FieldSubmitTime, v))
}

// SubmitTimeLTE applies the LTE predicate on the "submit_time" field.
func SubmitTimeLTE(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLTE(FieldSubmitTime, v))
}

// ApproverEQ applies the EQ predicate on the "approver" field.
func ApproverEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldApprover, v))
}

// ApproverNEQ applies the NEQ predicate on the "approver" field.
func ApproverNEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNEQ(FieldApprover, v))
}

// ApproverIn applies the In predicate on the "approver" field.
func ApproverIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldIn(FieldApprover, vs...))
}

// ApproverNotIn applies the NotIn predicate on the "approver" field.
func ApproverNotIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNotIn(FieldApprover, vs...))
}

// ApproverGT applies the GT predicate on the "approver" field.
func ApproverGT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGT(FieldApprover, v))
}

// ApproverGTE applies the GTE predicate on the "approver" field.
func ApproverGTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGTE(FieldApprover, v))
}

// ApproverLT applies the LT predicate on the "approver" field.
func ApproverLT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLT(FieldApprover, v))
}

// ApproverLTE applies the LTE predicate on the "approver" field.
func ApproverLTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLTE(FieldApprover, v))
}

// ApproverContains applies the Contains predicate on the "approver" field.
func ApproverContains(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContains(FieldApprover, v))
}

// ApproverHasPrefix applies the HasPrefix predicate on the "approver" field.
func ApproverHasPrefix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasPrefix(FieldApprover, v))
}

// ApproverHasSuffix applies the HasSuffix predicate on the "approver" field.
func ApproverHasSuffix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasSuffix(FieldApprover, v))
}

// ApproverEqualFold applies the EqualFold predicate on the "approver" field.
func ApproverEqualFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEqualFold(FieldApprover, v))
}

// ApproverContainsFold applies the ContainsFold predicate on the "approver" field.
func ApproverContainsFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContainsFold(FieldApprover, v))
}

// ApproveTimeEQ applies the EQ predicate on the "approve_time" field.
func ApproveTimeEQ(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldApproveTime, v))
}

// ApproveTimeNEQ applies the NEQ predicate on the "approve_time" field.
func ApproveTimeNEQ(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNEQ(FieldApproveTime, v))
}

// ApproveTimeIn applies the In predicate on the "approve_time" field.
func ApproveTimeIn(vs ...time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldIn(FieldApproveTime, vs...))
}

// ApproveTimeNotIn applies the NotIn predicate on the "approve_time" field.
func ApproveTimeNotIn(vs ...time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNotIn(FieldApproveTime, vs...))
}

// ApproveTimeGT applies the GT predicate on the "approve_time" field.
func ApproveTimeGT(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGT(FieldApproveTime, v))
}

// ApproveTimeGTE applies the GTE predicate on the "approve_time" field.
func ApproveTimeGTE(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGTE(FieldApproveTime, v))
}

// ApproveTimeLT applies the LT predicate on the "approve_time" field.
func ApproveTimeLT(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLT(FieldApproveTime, v))
}

// ApproveTimeLTE applies the LTE predicate on the "approve_time" field.
func ApproveTimeLTE(v time.Time) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLTE(FieldApproveTime, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLTE(FieldStatus, v))
}

// ChangeSummaryEQ applies the EQ predicate on the "change_summary" field.
func ChangeSummaryEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldChangeSummary, v))
}

// ChangeSummaryNEQ applies the NEQ predicate on the "change_summary" field.
func ChangeSummaryNEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNEQ(FieldChangeSummary, v))
}

// ChangeSummaryIn applies the In predicate on the "change_summary" field.
func ChangeSummaryIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldIn(FieldChangeSummary, vs...))
}

// ChangeSummaryNotIn applies the NotIn predicate on the "change_summary" field.
func ChangeSummaryNotIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNotIn(FieldChangeSummary, vs...))
}

// ChangeSummaryGT applies the GT predicate on the "change_summary" field.
func ChangeSummaryGT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGT(FieldChangeSummary, v))
}

// ChangeSummaryGTE applies the GTE predicate on the "change_summary" field.
func ChangeSummaryGTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGTE(FieldChangeSummary, v))
}

// ChangeSummaryLT applies the LT predicate on the "change_summary" field.
func ChangeSummaryLT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLT(FieldChangeSummary, v))
}

// ChangeSummaryLTE applies the LTE predicate on the "change_summary" field.
func ChangeSummaryLTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLTE(FieldChangeSummary, v))
}

// ChangeSummaryContains applies the Contains predicate on the "change_summary" field.
func ChangeSummaryContains(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContains(FieldChangeSummary, v))
}

// ChangeSummaryHasPrefix applies the HasPrefix predicate on the "change_summary" field.
func ChangeSummaryHasPrefix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasPrefix(FieldChangeSummary, v))
}

// ChangeSummaryHasSuffix applies the HasSuffix predicate on the "change_summary" field.
func ChangeSummaryHasSuffix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasSuffix(FieldChangeSummary, v))
}

// ChangeSummaryEqualFold applies the EqualFold predicate on the "change_summary" field.
func ChangeSummaryEqualFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEqualFold(FieldChangeSummary, v))
}

// ChangeSummaryContainsFold applies the ContainsFold predicate on the "change_summary" field.
func ChangeSummaryContainsFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContainsFold(FieldChangeSummary, v))
}

// ChangeReasonEQ applies the EQ predicate on the "change_reason" field.
func ChangeReasonEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldChangeReason, v))
}

// ChangeReasonNEQ applies the NEQ predicate on the "change_reason" field.
func ChangeReasonNEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNEQ(FieldChangeReason, v))
}

// ChangeReasonIn applies the In predicate on the "change_reason" field.
func ChangeReasonIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldIn(FieldChangeReason, vs...))
}

// ChangeReasonNotIn applies the NotIn predicate on the "change_reason" field.
func ChangeReasonNotIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNotIn(FieldChangeReason, vs...))
}

// ChangeReasonGT applies the GT predicate on the "change_reason" field.
func ChangeReasonGT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGT(FieldChangeReason, v))
}

// ChangeReasonGTE applies the GTE predicate on the "change_reason" field.
func ChangeReasonGTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGTE(FieldChangeReason, v))
}

// ChangeReasonLT applies the LT predicate on the "change_reason" field.
func ChangeReasonLT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLT(FieldChangeReason, v))
}

// ChangeReasonLTE applies the LTE predicate on the "change_reason" field.
func ChangeReasonLTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLTE(FieldChangeReason, v))
}

// ChangeReasonContains applies the Contains predicate on the "change_reason" field.
func ChangeReasonContains(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContains(FieldChangeReason, v))
}

// ChangeReasonHasPrefix applies the HasPrefix predicate on the "change_reason" field.
func ChangeReasonHasPrefix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasPrefix(FieldChangeReason, v))
}

// ChangeReasonHasSuffix applies the HasSuffix predicate on the "change_reason" field.
func ChangeReasonHasSuffix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasSuffix(FieldChangeReason, v))
}

// ChangeReasonEqualFold applies the EqualFold predicate on the "change_reason" field.
func ChangeReasonEqualFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEqualFold(FieldChangeReason, v))
}

// ChangeReasonContainsFold applies the ContainsFold predicate on the "change_reason" field.
func ChangeReasonContainsFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContainsFold(FieldChangeReason, v))
}

// ChangeRecordEQ applies the EQ predicate on the "change_record" field.
func ChangeRecordEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEQ(FieldChangeRecord, v))
}

// ChangeRecordNEQ applies the NEQ predicate on the "change_record" field.
func ChangeRecordNEQ(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNEQ(FieldChangeRecord, v))
}

// ChangeRecordIn applies the In predicate on the "change_record" field.
func ChangeRecordIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldIn(FieldChangeRecord, vs...))
}

// ChangeRecordNotIn applies the NotIn predicate on the "change_record" field.
func ChangeRecordNotIn(vs ...string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldNotIn(FieldChangeRecord, vs...))
}

// ChangeRecordGT applies the GT predicate on the "change_record" field.
func ChangeRecordGT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGT(FieldChangeRecord, v))
}

// ChangeRecordGTE applies the GTE predicate on the "change_record" field.
func ChangeRecordGTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldGTE(FieldChangeRecord, v))
}

// ChangeRecordLT applies the LT predicate on the "change_record" field.
func ChangeRecordLT(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLT(FieldChangeRecord, v))
}

// ChangeRecordLTE applies the LTE predicate on the "change_record" field.
func ChangeRecordLTE(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldLTE(FieldChangeRecord, v))
}

// ChangeRecordContains applies the Contains predicate on the "change_record" field.
func ChangeRecordContains(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContains(FieldChangeRecord, v))
}

// ChangeRecordHasPrefix applies the HasPrefix predicate on the "change_record" field.
func ChangeRecordHasPrefix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasPrefix(FieldChangeRecord, v))
}

// ChangeRecordHasSuffix applies the HasSuffix predicate on the "change_record" field.
func ChangeRecordHasSuffix(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldHasSuffix(FieldChangeRecord, v))
}

// ChangeRecordEqualFold applies the EqualFold predicate on the "change_record" field.
func ChangeRecordEqualFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldEqualFold(FieldChangeRecord, v))
}

// ChangeRecordContainsFold applies the ContainsFold predicate on the "change_record" field.
func ChangeRecordContainsFold(v string) predicate.ActivityChange {
	return predicate.ActivityChange(sql.FieldContainsFold(FieldChangeRecord, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ActivityChange) predicate.ActivityChange {
	return predicate.ActivityChange(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ActivityChange) predicate.ActivityChange {
	return predicate.ActivityChange(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ActivityChange) predicate.ActivityChange {
	return predicate.ActivityChange(sql.NotPredicates(p))
}
