// Code generated by ent, DO NOT EDIT.

package bonusitem

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/twiglab/crm/bonus/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldUpdateTime, v))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldCode, v))
}

// MchID applies equality check predicate on the "mch_id" field. It's identical to MchIDEQ.
func MchID(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldMchID, v))
}

// MallCode applies equality check predicate on the "mall_code" field. It's identical to MallCodeEQ.
func MallCode(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldMallCode, v))
}

// MallName applies equality check predicate on the "mall_name" field. It's identical to MallNameEQ.
func MallName(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldMallName, v))
}

// ShopCode applies equality check predicate on the "shop_code" field. It's identical to ShopCodeEQ.
func ShopCode(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldShopCode, v))
}

// ShopName applies equality check predicate on the "shop_name" field. It's identical to ShopNameEQ.
func ShopName(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldShopName, v))
}

// MemberCode applies equality check predicate on the "member_code" field. It's identical to MemberCodeEQ.
func MemberCode(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldMemberCode, v))
}

// WxOpenID applies equality check predicate on the "wx_open_id" field. It's identical to WxOpenIDEQ.
func WxOpenID(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldWxOpenID, v))
}

// BcmbNotifyTime applies equality check predicate on the "bcmb_notify_time" field. It's identical to BcmbNotifyTimeEQ.
func BcmbNotifyTime(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbNotifyTime, v))
}

// BcmbNotifyID applies equality check predicate on the "bcmb_notify_id" field. It's identical to BcmbNotifyIDEQ.
func BcmbNotifyID(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbNotifyID, v))
}

// BcmbTransCode applies equality check predicate on the "bcmb_trans_code" field. It's identical to BcmbTransCodeEQ.
func BcmbTransCode(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbTransCode, v))
}

// Amount applies equality check predicate on the "amount" field. It's identical to AmountEQ.
func Amount(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldAmount, v))
}

// BcmbTransTime applies equality check predicate on the "bcmb_trans_time" field. It's identical to BcmbTransTimeEQ.
func BcmbTransTime(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbTransTime, v))
}

// CreateTs applies equality check predicate on the "create_ts" field. It's identical to CreateTsEQ.
func CreateTs(v int64) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldCreateTs, v))
}

// BcmbTransPayCode applies equality check predicate on the "bcmb_trans_pay_code" field. It's identical to BcmbTransPayCodeEQ.
func BcmbTransPayCode(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbTransPayCode, v))
}

// BcmbTransType applies equality check predicate on the "bcmb_trans_type" field. It's identical to BcmbTransTypeEQ.
func BcmbTransType(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbTransType, v))
}

// Bonus applies equality check predicate on the "bonus" field. It's identical to BonusEQ.
func Bonus(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBonus, v))
}

// BonusRate applies equality check predicate on the "bonus_rate" field. It's identical to BonusRateEQ.
func BonusRate(v int32) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBonusRate, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldStatus, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldUpdateTime, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContainsFold(FieldCode, v))
}

// MchIDEQ applies the EQ predicate on the "mch_id" field.
func MchIDEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldMchID, v))
}

// MchIDNEQ applies the NEQ predicate on the "mch_id" field.
func MchIDNEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldMchID, v))
}

// MchIDIn applies the In predicate on the "mch_id" field.
func MchIDIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldMchID, vs...))
}

// MchIDNotIn applies the NotIn predicate on the "mch_id" field.
func MchIDNotIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldMchID, vs...))
}

// MchIDGT applies the GT predicate on the "mch_id" field.
func MchIDGT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldMchID, v))
}

// MchIDGTE applies the GTE predicate on the "mch_id" field.
func MchIDGTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldMchID, v))
}

// MchIDLT applies the LT predicate on the "mch_id" field.
func MchIDLT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldMchID, v))
}

// MchIDLTE applies the LTE predicate on the "mch_id" field.
func MchIDLTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldMchID, v))
}

// MchIDContains applies the Contains predicate on the "mch_id" field.
func MchIDContains(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContains(FieldMchID, v))
}

// MchIDHasPrefix applies the HasPrefix predicate on the "mch_id" field.
func MchIDHasPrefix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasPrefix(FieldMchID, v))
}

// MchIDHasSuffix applies the HasSuffix predicate on the "mch_id" field.
func MchIDHasSuffix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasSuffix(FieldMchID, v))
}

// MchIDEqualFold applies the EqualFold predicate on the "mch_id" field.
func MchIDEqualFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEqualFold(FieldMchID, v))
}

// MchIDContainsFold applies the ContainsFold predicate on the "mch_id" field.
func MchIDContainsFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContainsFold(FieldMchID, v))
}

// MallCodeEQ applies the EQ predicate on the "mall_code" field.
func MallCodeEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldMallCode, v))
}

// MallCodeNEQ applies the NEQ predicate on the "mall_code" field.
func MallCodeNEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldMallCode, v))
}

// MallCodeIn applies the In predicate on the "mall_code" field.
func MallCodeIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldMallCode, vs...))
}

// MallCodeNotIn applies the NotIn predicate on the "mall_code" field.
func MallCodeNotIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldMallCode, vs...))
}

// MallCodeGT applies the GT predicate on the "mall_code" field.
func MallCodeGT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldMallCode, v))
}

// MallCodeGTE applies the GTE predicate on the "mall_code" field.
func MallCodeGTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldMallCode, v))
}

// MallCodeLT applies the LT predicate on the "mall_code" field.
func MallCodeLT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldMallCode, v))
}

// MallCodeLTE applies the LTE predicate on the "mall_code" field.
func MallCodeLTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldMallCode, v))
}

// MallCodeContains applies the Contains predicate on the "mall_code" field.
func MallCodeContains(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContains(FieldMallCode, v))
}

// MallCodeHasPrefix applies the HasPrefix predicate on the "mall_code" field.
func MallCodeHasPrefix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasPrefix(FieldMallCode, v))
}

// MallCodeHasSuffix applies the HasSuffix predicate on the "mall_code" field.
func MallCodeHasSuffix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasSuffix(FieldMallCode, v))
}

// MallCodeEqualFold applies the EqualFold predicate on the "mall_code" field.
func MallCodeEqualFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEqualFold(FieldMallCode, v))
}

// MallCodeContainsFold applies the ContainsFold predicate on the "mall_code" field.
func MallCodeContainsFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContainsFold(FieldMallCode, v))
}

// MallNameEQ applies the EQ predicate on the "mall_name" field.
func MallNameEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldMallName, v))
}

// MallNameNEQ applies the NEQ predicate on the "mall_name" field.
func MallNameNEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldMallName, v))
}

// MallNameIn applies the In predicate on the "mall_name" field.
func MallNameIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldMallName, vs...))
}

// MallNameNotIn applies the NotIn predicate on the "mall_name" field.
func MallNameNotIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldMallName, vs...))
}

// MallNameGT applies the GT predicate on the "mall_name" field.
func MallNameGT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldMallName, v))
}

// MallNameGTE applies the GTE predicate on the "mall_name" field.
func MallNameGTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldMallName, v))
}

// MallNameLT applies the LT predicate on the "mall_name" field.
func MallNameLT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldMallName, v))
}

// MallNameLTE applies the LTE predicate on the "mall_name" field.
func MallNameLTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldMallName, v))
}

// MallNameContains applies the Contains predicate on the "mall_name" field.
func MallNameContains(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContains(FieldMallName, v))
}

// MallNameHasPrefix applies the HasPrefix predicate on the "mall_name" field.
func MallNameHasPrefix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasPrefix(FieldMallName, v))
}

// MallNameHasSuffix applies the HasSuffix predicate on the "mall_name" field.
func MallNameHasSuffix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasSuffix(FieldMallName, v))
}

// MallNameEqualFold applies the EqualFold predicate on the "mall_name" field.
func MallNameEqualFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEqualFold(FieldMallName, v))
}

// MallNameContainsFold applies the ContainsFold predicate on the "mall_name" field.
func MallNameContainsFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContainsFold(FieldMallName, v))
}

// ShopCodeEQ applies the EQ predicate on the "shop_code" field.
func ShopCodeEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldShopCode, v))
}

// ShopCodeNEQ applies the NEQ predicate on the "shop_code" field.
func ShopCodeNEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldShopCode, v))
}

// ShopCodeIn applies the In predicate on the "shop_code" field.
func ShopCodeIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldShopCode, vs...))
}

// ShopCodeNotIn applies the NotIn predicate on the "shop_code" field.
func ShopCodeNotIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldShopCode, vs...))
}

// ShopCodeGT applies the GT predicate on the "shop_code" field.
func ShopCodeGT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldShopCode, v))
}

// ShopCodeGTE applies the GTE predicate on the "shop_code" field.
func ShopCodeGTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldShopCode, v))
}

// ShopCodeLT applies the LT predicate on the "shop_code" field.
func ShopCodeLT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldShopCode, v))
}

// ShopCodeLTE applies the LTE predicate on the "shop_code" field.
func ShopCodeLTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldShopCode, v))
}

// ShopCodeContains applies the Contains predicate on the "shop_code" field.
func ShopCodeContains(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContains(FieldShopCode, v))
}

// ShopCodeHasPrefix applies the HasPrefix predicate on the "shop_code" field.
func ShopCodeHasPrefix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasPrefix(FieldShopCode, v))
}

// ShopCodeHasSuffix applies the HasSuffix predicate on the "shop_code" field.
func ShopCodeHasSuffix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasSuffix(FieldShopCode, v))
}

// ShopCodeEqualFold applies the EqualFold predicate on the "shop_code" field.
func ShopCodeEqualFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEqualFold(FieldShopCode, v))
}

// ShopCodeContainsFold applies the ContainsFold predicate on the "shop_code" field.
func ShopCodeContainsFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContainsFold(FieldShopCode, v))
}

// ShopNameEQ applies the EQ predicate on the "shop_name" field.
func ShopNameEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldShopName, v))
}

// ShopNameNEQ applies the NEQ predicate on the "shop_name" field.
func ShopNameNEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldShopName, v))
}

// ShopNameIn applies the In predicate on the "shop_name" field.
func ShopNameIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldShopName, vs...))
}

// ShopNameNotIn applies the NotIn predicate on the "shop_name" field.
func ShopNameNotIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldShopName, vs...))
}

// ShopNameGT applies the GT predicate on the "shop_name" field.
func ShopNameGT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldShopName, v))
}

// ShopNameGTE applies the GTE predicate on the "shop_name" field.
func ShopNameGTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldShopName, v))
}

// ShopNameLT applies the LT predicate on the "shop_name" field.
func ShopNameLT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldShopName, v))
}

// ShopNameLTE applies the LTE predicate on the "shop_name" field.
func ShopNameLTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldShopName, v))
}

// ShopNameContains applies the Contains predicate on the "shop_name" field.
func ShopNameContains(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContains(FieldShopName, v))
}

// ShopNameHasPrefix applies the HasPrefix predicate on the "shop_name" field.
func ShopNameHasPrefix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasPrefix(FieldShopName, v))
}

// ShopNameHasSuffix applies the HasSuffix predicate on the "shop_name" field.
func ShopNameHasSuffix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasSuffix(FieldShopName, v))
}

// ShopNameEqualFold applies the EqualFold predicate on the "shop_name" field.
func ShopNameEqualFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEqualFold(FieldShopName, v))
}

// ShopNameContainsFold applies the ContainsFold predicate on the "shop_name" field.
func ShopNameContainsFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContainsFold(FieldShopName, v))
}

// MemberCodeEQ applies the EQ predicate on the "member_code" field.
func MemberCodeEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldMemberCode, v))
}

// MemberCodeNEQ applies the NEQ predicate on the "member_code" field.
func MemberCodeNEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldMemberCode, v))
}

// MemberCodeIn applies the In predicate on the "member_code" field.
func MemberCodeIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldMemberCode, vs...))
}

// MemberCodeNotIn applies the NotIn predicate on the "member_code" field.
func MemberCodeNotIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldMemberCode, vs...))
}

// MemberCodeGT applies the GT predicate on the "member_code" field.
func MemberCodeGT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldMemberCode, v))
}

// MemberCodeGTE applies the GTE predicate on the "member_code" field.
func MemberCodeGTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldMemberCode, v))
}

// MemberCodeLT applies the LT predicate on the "member_code" field.
func MemberCodeLT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldMemberCode, v))
}

// MemberCodeLTE applies the LTE predicate on the "member_code" field.
func MemberCodeLTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldMemberCode, v))
}

// MemberCodeContains applies the Contains predicate on the "member_code" field.
func MemberCodeContains(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContains(FieldMemberCode, v))
}

// MemberCodeHasPrefix applies the HasPrefix predicate on the "member_code" field.
func MemberCodeHasPrefix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasPrefix(FieldMemberCode, v))
}

// MemberCodeHasSuffix applies the HasSuffix predicate on the "member_code" field.
func MemberCodeHasSuffix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasSuffix(FieldMemberCode, v))
}

// MemberCodeEqualFold applies the EqualFold predicate on the "member_code" field.
func MemberCodeEqualFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEqualFold(FieldMemberCode, v))
}

// MemberCodeContainsFold applies the ContainsFold predicate on the "member_code" field.
func MemberCodeContainsFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContainsFold(FieldMemberCode, v))
}

// WxOpenIDEQ applies the EQ predicate on the "wx_open_id" field.
func WxOpenIDEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldWxOpenID, v))
}

// WxOpenIDNEQ applies the NEQ predicate on the "wx_open_id" field.
func WxOpenIDNEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldWxOpenID, v))
}

// WxOpenIDIn applies the In predicate on the "wx_open_id" field.
func WxOpenIDIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldWxOpenID, vs...))
}

// WxOpenIDNotIn applies the NotIn predicate on the "wx_open_id" field.
func WxOpenIDNotIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldWxOpenID, vs...))
}

// WxOpenIDGT applies the GT predicate on the "wx_open_id" field.
func WxOpenIDGT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldWxOpenID, v))
}

// WxOpenIDGTE applies the GTE predicate on the "wx_open_id" field.
func WxOpenIDGTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldWxOpenID, v))
}

// WxOpenIDLT applies the LT predicate on the "wx_open_id" field.
func WxOpenIDLT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldWxOpenID, v))
}

// WxOpenIDLTE applies the LTE predicate on the "wx_open_id" field.
func WxOpenIDLTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldWxOpenID, v))
}

// WxOpenIDContains applies the Contains predicate on the "wx_open_id" field.
func WxOpenIDContains(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContains(FieldWxOpenID, v))
}

// WxOpenIDHasPrefix applies the HasPrefix predicate on the "wx_open_id" field.
func WxOpenIDHasPrefix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasPrefix(FieldWxOpenID, v))
}

// WxOpenIDHasSuffix applies the HasSuffix predicate on the "wx_open_id" field.
func WxOpenIDHasSuffix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasSuffix(FieldWxOpenID, v))
}

// WxOpenIDEqualFold applies the EqualFold predicate on the "wx_open_id" field.
func WxOpenIDEqualFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEqualFold(FieldWxOpenID, v))
}

// WxOpenIDContainsFold applies the ContainsFold predicate on the "wx_open_id" field.
func WxOpenIDContainsFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContainsFold(FieldWxOpenID, v))
}

// BcmbNotifyTimeEQ applies the EQ predicate on the "bcmb_notify_time" field.
func BcmbNotifyTimeEQ(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbNotifyTime, v))
}

// BcmbNotifyTimeNEQ applies the NEQ predicate on the "bcmb_notify_time" field.
func BcmbNotifyTimeNEQ(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldBcmbNotifyTime, v))
}

// BcmbNotifyTimeIn applies the In predicate on the "bcmb_notify_time" field.
func BcmbNotifyTimeIn(vs ...time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldBcmbNotifyTime, vs...))
}

// BcmbNotifyTimeNotIn applies the NotIn predicate on the "bcmb_notify_time" field.
func BcmbNotifyTimeNotIn(vs ...time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldBcmbNotifyTime, vs...))
}

// BcmbNotifyTimeGT applies the GT predicate on the "bcmb_notify_time" field.
func BcmbNotifyTimeGT(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldBcmbNotifyTime, v))
}

// BcmbNotifyTimeGTE applies the GTE predicate on the "bcmb_notify_time" field.
func BcmbNotifyTimeGTE(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldBcmbNotifyTime, v))
}

// BcmbNotifyTimeLT applies the LT predicate on the "bcmb_notify_time" field.
func BcmbNotifyTimeLT(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldBcmbNotifyTime, v))
}

// BcmbNotifyTimeLTE applies the LTE predicate on the "bcmb_notify_time" field.
func BcmbNotifyTimeLTE(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldBcmbNotifyTime, v))
}

// BcmbNotifyIDEQ applies the EQ predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbNotifyID, v))
}

// BcmbNotifyIDNEQ applies the NEQ predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDNEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldBcmbNotifyID, v))
}

// BcmbNotifyIDIn applies the In predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldBcmbNotifyID, vs...))
}

// BcmbNotifyIDNotIn applies the NotIn predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDNotIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldBcmbNotifyID, vs...))
}

// BcmbNotifyIDGT applies the GT predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDGT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldBcmbNotifyID, v))
}

// BcmbNotifyIDGTE applies the GTE predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDGTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldBcmbNotifyID, v))
}

// BcmbNotifyIDLT applies the LT predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDLT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldBcmbNotifyID, v))
}

// BcmbNotifyIDLTE applies the LTE predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDLTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldBcmbNotifyID, v))
}

// BcmbNotifyIDContains applies the Contains predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDContains(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContains(FieldBcmbNotifyID, v))
}

// BcmbNotifyIDHasPrefix applies the HasPrefix predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDHasPrefix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasPrefix(FieldBcmbNotifyID, v))
}

// BcmbNotifyIDHasSuffix applies the HasSuffix predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDHasSuffix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasSuffix(FieldBcmbNotifyID, v))
}

// BcmbNotifyIDIsNil applies the IsNil predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDIsNil() predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIsNull(FieldBcmbNotifyID))
}

// BcmbNotifyIDNotNil applies the NotNil predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDNotNil() predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotNull(FieldBcmbNotifyID))
}

// BcmbNotifyIDEqualFold applies the EqualFold predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDEqualFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEqualFold(FieldBcmbNotifyID, v))
}

// BcmbNotifyIDContainsFold applies the ContainsFold predicate on the "bcmb_notify_id" field.
func BcmbNotifyIDContainsFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContainsFold(FieldBcmbNotifyID, v))
}

// BcmbTransCodeEQ applies the EQ predicate on the "bcmb_trans_code" field.
func BcmbTransCodeEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbTransCode, v))
}

// BcmbTransCodeNEQ applies the NEQ predicate on the "bcmb_trans_code" field.
func BcmbTransCodeNEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldBcmbTransCode, v))
}

// BcmbTransCodeIn applies the In predicate on the "bcmb_trans_code" field.
func BcmbTransCodeIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldBcmbTransCode, vs...))
}

// BcmbTransCodeNotIn applies the NotIn predicate on the "bcmb_trans_code" field.
func BcmbTransCodeNotIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldBcmbTransCode, vs...))
}

// BcmbTransCodeGT applies the GT predicate on the "bcmb_trans_code" field.
func BcmbTransCodeGT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldBcmbTransCode, v))
}

// BcmbTransCodeGTE applies the GTE predicate on the "bcmb_trans_code" field.
func BcmbTransCodeGTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldBcmbTransCode, v))
}

// BcmbTransCodeLT applies the LT predicate on the "bcmb_trans_code" field.
func BcmbTransCodeLT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldBcmbTransCode, v))
}

// BcmbTransCodeLTE applies the LTE predicate on the "bcmb_trans_code" field.
func BcmbTransCodeLTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldBcmbTransCode, v))
}

// BcmbTransCodeContains applies the Contains predicate on the "bcmb_trans_code" field.
func BcmbTransCodeContains(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContains(FieldBcmbTransCode, v))
}

// BcmbTransCodeHasPrefix applies the HasPrefix predicate on the "bcmb_trans_code" field.
func BcmbTransCodeHasPrefix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasPrefix(FieldBcmbTransCode, v))
}

// BcmbTransCodeHasSuffix applies the HasSuffix predicate on the "bcmb_trans_code" field.
func BcmbTransCodeHasSuffix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasSuffix(FieldBcmbTransCode, v))
}

// BcmbTransCodeEqualFold applies the EqualFold predicate on the "bcmb_trans_code" field.
func BcmbTransCodeEqualFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEqualFold(FieldBcmbTransCode, v))
}

// BcmbTransCodeContainsFold applies the ContainsFold predicate on the "bcmb_trans_code" field.
func BcmbTransCodeContainsFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContainsFold(FieldBcmbTransCode, v))
}

// AmountEQ applies the EQ predicate on the "amount" field.
func AmountEQ(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldAmount, v))
}

// AmountNEQ applies the NEQ predicate on the "amount" field.
func AmountNEQ(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldAmount, v))
}

// AmountIn applies the In predicate on the "amount" field.
func AmountIn(vs ...int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldAmount, vs...))
}

// AmountNotIn applies the NotIn predicate on the "amount" field.
func AmountNotIn(vs ...int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldAmount, vs...))
}

// AmountGT applies the GT predicate on the "amount" field.
func AmountGT(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldAmount, v))
}

// AmountGTE applies the GTE predicate on the "amount" field.
func AmountGTE(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldAmount, v))
}

// AmountLT applies the LT predicate on the "amount" field.
func AmountLT(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldAmount, v))
}

// AmountLTE applies the LTE predicate on the "amount" field.
func AmountLTE(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldAmount, v))
}

// BcmbTransTimeEQ applies the EQ predicate on the "bcmb_trans_time" field.
func BcmbTransTimeEQ(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbTransTime, v))
}

// BcmbTransTimeNEQ applies the NEQ predicate on the "bcmb_trans_time" field.
func BcmbTransTimeNEQ(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldBcmbTransTime, v))
}

// BcmbTransTimeIn applies the In predicate on the "bcmb_trans_time" field.
func BcmbTransTimeIn(vs ...time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldBcmbTransTime, vs...))
}

// BcmbTransTimeNotIn applies the NotIn predicate on the "bcmb_trans_time" field.
func BcmbTransTimeNotIn(vs ...time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldBcmbTransTime, vs...))
}

// BcmbTransTimeGT applies the GT predicate on the "bcmb_trans_time" field.
func BcmbTransTimeGT(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldBcmbTransTime, v))
}

// BcmbTransTimeGTE applies the GTE predicate on the "bcmb_trans_time" field.
func BcmbTransTimeGTE(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldBcmbTransTime, v))
}

// BcmbTransTimeLT applies the LT predicate on the "bcmb_trans_time" field.
func BcmbTransTimeLT(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldBcmbTransTime, v))
}

// BcmbTransTimeLTE applies the LTE predicate on the "bcmb_trans_time" field.
func BcmbTransTimeLTE(v time.Time) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldBcmbTransTime, v))
}

// CreateTsEQ applies the EQ predicate on the "create_ts" field.
func CreateTsEQ(v int64) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldCreateTs, v))
}

// CreateTsNEQ applies the NEQ predicate on the "create_ts" field.
func CreateTsNEQ(v int64) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldCreateTs, v))
}

// CreateTsIn applies the In predicate on the "create_ts" field.
func CreateTsIn(vs ...int64) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldCreateTs, vs...))
}

// CreateTsNotIn applies the NotIn predicate on the "create_ts" field.
func CreateTsNotIn(vs ...int64) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldCreateTs, vs...))
}

// CreateTsGT applies the GT predicate on the "create_ts" field.
func CreateTsGT(v int64) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldCreateTs, v))
}

// CreateTsGTE applies the GTE predicate on the "create_ts" field.
func CreateTsGTE(v int64) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldCreateTs, v))
}

// CreateTsLT applies the LT predicate on the "create_ts" field.
func CreateTsLT(v int64) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldCreateTs, v))
}

// CreateTsLTE applies the LTE predicate on the "create_ts" field.
func CreateTsLTE(v int64) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldCreateTs, v))
}

// BcmbTransPayCodeEQ applies the EQ predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbTransPayCode, v))
}

// BcmbTransPayCodeNEQ applies the NEQ predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeNEQ(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldBcmbTransPayCode, v))
}

// BcmbTransPayCodeIn applies the In predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldBcmbTransPayCode, vs...))
}

// BcmbTransPayCodeNotIn applies the NotIn predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeNotIn(vs ...string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldBcmbTransPayCode, vs...))
}

// BcmbTransPayCodeGT applies the GT predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeGT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldBcmbTransPayCode, v))
}

// BcmbTransPayCodeGTE applies the GTE predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeGTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldBcmbTransPayCode, v))
}

// BcmbTransPayCodeLT applies the LT predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeLT(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldBcmbTransPayCode, v))
}

// BcmbTransPayCodeLTE applies the LTE predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeLTE(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldBcmbTransPayCode, v))
}

// BcmbTransPayCodeContains applies the Contains predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeContains(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContains(FieldBcmbTransPayCode, v))
}

// BcmbTransPayCodeHasPrefix applies the HasPrefix predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeHasPrefix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasPrefix(FieldBcmbTransPayCode, v))
}

// BcmbTransPayCodeHasSuffix applies the HasSuffix predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeHasSuffix(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldHasSuffix(FieldBcmbTransPayCode, v))
}

// BcmbTransPayCodeIsNil applies the IsNil predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeIsNil() predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIsNull(FieldBcmbTransPayCode))
}

// BcmbTransPayCodeNotNil applies the NotNil predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeNotNil() predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotNull(FieldBcmbTransPayCode))
}

// BcmbTransPayCodeEqualFold applies the EqualFold predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeEqualFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEqualFold(FieldBcmbTransPayCode, v))
}

// BcmbTransPayCodeContainsFold applies the ContainsFold predicate on the "bcmb_trans_pay_code" field.
func BcmbTransPayCodeContainsFold(v string) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldContainsFold(FieldBcmbTransPayCode, v))
}

// BcmbTransTypeEQ applies the EQ predicate on the "bcmb_trans_type" field.
func BcmbTransTypeEQ(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBcmbTransType, v))
}

// BcmbTransTypeNEQ applies the NEQ predicate on the "bcmb_trans_type" field.
func BcmbTransTypeNEQ(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldBcmbTransType, v))
}

// BcmbTransTypeIn applies the In predicate on the "bcmb_trans_type" field.
func BcmbTransTypeIn(vs ...int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldBcmbTransType, vs...))
}

// BcmbTransTypeNotIn applies the NotIn predicate on the "bcmb_trans_type" field.
func BcmbTransTypeNotIn(vs ...int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldBcmbTransType, vs...))
}

// BcmbTransTypeGT applies the GT predicate on the "bcmb_trans_type" field.
func BcmbTransTypeGT(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldBcmbTransType, v))
}

// BcmbTransTypeGTE applies the GTE predicate on the "bcmb_trans_type" field.
func BcmbTransTypeGTE(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldBcmbTransType, v))
}

// BcmbTransTypeLT applies the LT predicate on the "bcmb_trans_type" field.
func BcmbTransTypeLT(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldBcmbTransType, v))
}

// BcmbTransTypeLTE applies the LTE predicate on the "bcmb_trans_type" field.
func BcmbTransTypeLTE(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldBcmbTransType, v))
}

// BonusEQ applies the EQ predicate on the "bonus" field.
func BonusEQ(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBonus, v))
}

// BonusNEQ applies the NEQ predicate on the "bonus" field.
func BonusNEQ(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldBonus, v))
}

// BonusIn applies the In predicate on the "bonus" field.
func BonusIn(vs ...int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldBonus, vs...))
}

// BonusNotIn applies the NotIn predicate on the "bonus" field.
func BonusNotIn(vs ...int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldBonus, vs...))
}

// BonusGT applies the GT predicate on the "bonus" field.
func BonusGT(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldBonus, v))
}

// BonusGTE applies the GTE predicate on the "bonus" field.
func BonusGTE(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldBonus, v))
}

// BonusLT applies the LT predicate on the "bonus" field.
func BonusLT(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldBonus, v))
}

// BonusLTE applies the LTE predicate on the "bonus" field.
func BonusLTE(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldBonus, v))
}

// BonusRateEQ applies the EQ predicate on the "bonus_rate" field.
func BonusRateEQ(v int32) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldBonusRate, v))
}

// BonusRateNEQ applies the NEQ predicate on the "bonus_rate" field.
func BonusRateNEQ(v int32) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldBonusRate, v))
}

// BonusRateIn applies the In predicate on the "bonus_rate" field.
func BonusRateIn(vs ...int32) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldBonusRate, vs...))
}

// BonusRateNotIn applies the NotIn predicate on the "bonus_rate" field.
func BonusRateNotIn(vs ...int32) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldBonusRate, vs...))
}

// BonusRateGT applies the GT predicate on the "bonus_rate" field.
func BonusRateGT(v int32) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldBonusRate, v))
}

// BonusRateGTE applies the GTE predicate on the "bonus_rate" field.
func BonusRateGTE(v int32) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldBonusRate, v))
}

// BonusRateLT applies the LT predicate on the "bonus_rate" field.
func BonusRateLT(v int32) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldBonusRate, v))
}

// BonusRateLTE applies the LTE predicate on the "bonus_rate" field.
func BonusRateLTE(v int32) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldBonusRate, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int) predicate.BonusItem {
	return predicate.BonusItem(sql.FieldLTE(FieldStatus, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.BonusItem) predicate.BonusItem {
	return predicate.BonusItem(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.BonusItem) predicate.BonusItem {
	return predicate.BonusItem(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.BonusItem) predicate.BonusItem {
	return predicate.BonusItem(sql.NotPredicates(p))
}
