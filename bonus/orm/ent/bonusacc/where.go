// Code generated by ent, DO NOT EDIT.

package bonusacc

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/twiglab/crm/bonus/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldUpdateTime, v))
}

// MemberCode applies equality check predicate on the "member_code" field. It's identical to MemberCodeEQ.
func MemberCode(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldMemberCode, v))
}

// LastCleanBalance applies equality check predicate on the "last_clean_balance" field. It's identical to LastCleanBalanceEQ.
func LastCleanBalance(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldLastCleanBalance, v))
}

// LastCleanTs applies equality check predicate on the "last_clean_ts" field. It's identical to LastCleanTsEQ.
func LastCleanTs(v int64) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldLastCleanTs, v))
}

// LastCleanTime applies equality check predicate on the "last_clean_time" field. It's identical to LastCleanTimeEQ.
func LastCleanTime(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldLastCleanTime, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldStatus, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLTE(FieldUpdateTime, v))
}

// MemberCodeEQ applies the EQ predicate on the "member_code" field.
func MemberCodeEQ(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldMemberCode, v))
}

// MemberCodeNEQ applies the NEQ predicate on the "member_code" field.
func MemberCodeNEQ(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNEQ(FieldMemberCode, v))
}

// MemberCodeIn applies the In predicate on the "member_code" field.
func MemberCodeIn(vs ...string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldIn(FieldMemberCode, vs...))
}

// MemberCodeNotIn applies the NotIn predicate on the "member_code" field.
func MemberCodeNotIn(vs ...string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNotIn(FieldMemberCode, vs...))
}

// MemberCodeGT applies the GT predicate on the "member_code" field.
func MemberCodeGT(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGT(FieldMemberCode, v))
}

// MemberCodeGTE applies the GTE predicate on the "member_code" field.
func MemberCodeGTE(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGTE(FieldMemberCode, v))
}

// MemberCodeLT applies the LT predicate on the "member_code" field.
func MemberCodeLT(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLT(FieldMemberCode, v))
}

// MemberCodeLTE applies the LTE predicate on the "member_code" field.
func MemberCodeLTE(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLTE(FieldMemberCode, v))
}

// MemberCodeContains applies the Contains predicate on the "member_code" field.
func MemberCodeContains(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldContains(FieldMemberCode, v))
}

// MemberCodeHasPrefix applies the HasPrefix predicate on the "member_code" field.
func MemberCodeHasPrefix(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldHasPrefix(FieldMemberCode, v))
}

// MemberCodeHasSuffix applies the HasSuffix predicate on the "member_code" field.
func MemberCodeHasSuffix(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldHasSuffix(FieldMemberCode, v))
}

// MemberCodeEqualFold applies the EqualFold predicate on the "member_code" field.
func MemberCodeEqualFold(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEqualFold(FieldMemberCode, v))
}

// MemberCodeContainsFold applies the ContainsFold predicate on the "member_code" field.
func MemberCodeContainsFold(v string) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldContainsFold(FieldMemberCode, v))
}

// LastCleanBalanceEQ applies the EQ predicate on the "last_clean_balance" field.
func LastCleanBalanceEQ(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldLastCleanBalance, v))
}

// LastCleanBalanceNEQ applies the NEQ predicate on the "last_clean_balance" field.
func LastCleanBalanceNEQ(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNEQ(FieldLastCleanBalance, v))
}

// LastCleanBalanceIn applies the In predicate on the "last_clean_balance" field.
func LastCleanBalanceIn(vs ...int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldIn(FieldLastCleanBalance, vs...))
}

// LastCleanBalanceNotIn applies the NotIn predicate on the "last_clean_balance" field.
func LastCleanBalanceNotIn(vs ...int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNotIn(FieldLastCleanBalance, vs...))
}

// LastCleanBalanceGT applies the GT predicate on the "last_clean_balance" field.
func LastCleanBalanceGT(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGT(FieldLastCleanBalance, v))
}

// LastCleanBalanceGTE applies the GTE predicate on the "last_clean_balance" field.
func LastCleanBalanceGTE(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGTE(FieldLastCleanBalance, v))
}

// LastCleanBalanceLT applies the LT predicate on the "last_clean_balance" field.
func LastCleanBalanceLT(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLT(FieldLastCleanBalance, v))
}

// LastCleanBalanceLTE applies the LTE predicate on the "last_clean_balance" field.
func LastCleanBalanceLTE(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLTE(FieldLastCleanBalance, v))
}

// LastCleanTsEQ applies the EQ predicate on the "last_clean_ts" field.
func LastCleanTsEQ(v int64) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldLastCleanTs, v))
}

// LastCleanTsNEQ applies the NEQ predicate on the "last_clean_ts" field.
func LastCleanTsNEQ(v int64) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNEQ(FieldLastCleanTs, v))
}

// LastCleanTsIn applies the In predicate on the "last_clean_ts" field.
func LastCleanTsIn(vs ...int64) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldIn(FieldLastCleanTs, vs...))
}

// LastCleanTsNotIn applies the NotIn predicate on the "last_clean_ts" field.
func LastCleanTsNotIn(vs ...int64) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNotIn(FieldLastCleanTs, vs...))
}

// LastCleanTsGT applies the GT predicate on the "last_clean_ts" field.
func LastCleanTsGT(v int64) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGT(FieldLastCleanTs, v))
}

// LastCleanTsGTE applies the GTE predicate on the "last_clean_ts" field.
func LastCleanTsGTE(v int64) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGTE(FieldLastCleanTs, v))
}

// LastCleanTsLT applies the LT predicate on the "last_clean_ts" field.
func LastCleanTsLT(v int64) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLT(FieldLastCleanTs, v))
}

// LastCleanTsLTE applies the LTE predicate on the "last_clean_ts" field.
func LastCleanTsLTE(v int64) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLTE(FieldLastCleanTs, v))
}

// LastCleanTimeEQ applies the EQ predicate on the "last_clean_time" field.
func LastCleanTimeEQ(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldLastCleanTime, v))
}

// LastCleanTimeNEQ applies the NEQ predicate on the "last_clean_time" field.
func LastCleanTimeNEQ(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNEQ(FieldLastCleanTime, v))
}

// LastCleanTimeIn applies the In predicate on the "last_clean_time" field.
func LastCleanTimeIn(vs ...time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldIn(FieldLastCleanTime, vs...))
}

// LastCleanTimeNotIn applies the NotIn predicate on the "last_clean_time" field.
func LastCleanTimeNotIn(vs ...time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNotIn(FieldLastCleanTime, vs...))
}

// LastCleanTimeGT applies the GT predicate on the "last_clean_time" field.
func LastCleanTimeGT(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGT(FieldLastCleanTime, v))
}

// LastCleanTimeGTE applies the GTE predicate on the "last_clean_time" field.
func LastCleanTimeGTE(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGTE(FieldLastCleanTime, v))
}

// LastCleanTimeLT applies the LT predicate on the "last_clean_time" field.
func LastCleanTimeLT(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLT(FieldLastCleanTime, v))
}

// LastCleanTimeLTE applies the LTE predicate on the "last_clean_time" field.
func LastCleanTimeLTE(v time.Time) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLTE(FieldLastCleanTime, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int) predicate.BonusAcc {
	return predicate.BonusAcc(sql.FieldLTE(FieldStatus, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.BonusAcc) predicate.BonusAcc {
	return predicate.BonusAcc(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.BonusAcc) predicate.BonusAcc {
	return predicate.BonusAcc(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.BonusAcc) predicate.BonusAcc {
	return predicate.BonusAcc(sql.NotPredicates(p))
}
