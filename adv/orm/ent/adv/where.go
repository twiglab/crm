// Code generated by ent, DO NOT EDIT.

package adv

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/twiglab/crm/adv/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldUpdateTime, v))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldCode, v))
}

// MallCode applies equality check predicate on the "mall_code" field. It's identical to MallCodeEQ.
func MallCode(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldMallCode, v))
}

// MallName applies equality check predicate on the "mall_name" field. It's identical to MallNameEQ.
func MallName(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldMallName, v))
}

// H3Index6 applies equality check predicate on the "h3_index_6" field. It's identical to H3Index6EQ.
func H3Index6(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldH3Index6, v))
}

// H3Index7 applies equality check predicate on the "h3_index_7" field. It's identical to H3Index7EQ.
func H3Index7(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldH3Index7, v))
}

// H3Index8 applies equality check predicate on the "h3_index_8" field. It's identical to H3Index8EQ.
func H3Index8(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldH3Index8, v))
}

// ImgPath applies equality check predicate on the "img_path" field. It's identical to ImgPathEQ.
func ImgPath(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldImgPath, v))
}

// URL applies equality check predicate on the "url" field. It's identical to URLEQ.
func URL(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldURL, v))
}

// Ruler applies equality check predicate on the "ruler" field. It's identical to RulerEQ.
func Ruler(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldRuler, v))
}

// Ord applies equality check predicate on the "ord" field. It's identical to OrdEQ.
func Ord(v int) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldOrd, v))
}

// Memo applies equality check predicate on the "memo" field. It's identical to MemoEQ.
func Memo(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldMemo, v))
}

// StartTime applies equality check predicate on the "start_time" field. It's identical to StartTimeEQ.
func StartTime(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldStartTime, v))
}

// EndTime applies equality check predicate on the "end_time" field. It's identical to EndTimeEQ.
func EndTime(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldEndTime, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldStatus, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldUpdateTime, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContainsFold(FieldCode, v))
}

// MallCodeEQ applies the EQ predicate on the "mall_code" field.
func MallCodeEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldMallCode, v))
}

// MallCodeNEQ applies the NEQ predicate on the "mall_code" field.
func MallCodeNEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldMallCode, v))
}

// MallCodeIn applies the In predicate on the "mall_code" field.
func MallCodeIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldMallCode, vs...))
}

// MallCodeNotIn applies the NotIn predicate on the "mall_code" field.
func MallCodeNotIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldMallCode, vs...))
}

// MallCodeGT applies the GT predicate on the "mall_code" field.
func MallCodeGT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldMallCode, v))
}

// MallCodeGTE applies the GTE predicate on the "mall_code" field.
func MallCodeGTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldMallCode, v))
}

// MallCodeLT applies the LT predicate on the "mall_code" field.
func MallCodeLT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldMallCode, v))
}

// MallCodeLTE applies the LTE predicate on the "mall_code" field.
func MallCodeLTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldMallCode, v))
}

// MallCodeContains applies the Contains predicate on the "mall_code" field.
func MallCodeContains(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContains(FieldMallCode, v))
}

// MallCodeHasPrefix applies the HasPrefix predicate on the "mall_code" field.
func MallCodeHasPrefix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasPrefix(FieldMallCode, v))
}

// MallCodeHasSuffix applies the HasSuffix predicate on the "mall_code" field.
func MallCodeHasSuffix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasSuffix(FieldMallCode, v))
}

// MallCodeEqualFold applies the EqualFold predicate on the "mall_code" field.
func MallCodeEqualFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEqualFold(FieldMallCode, v))
}

// MallCodeContainsFold applies the ContainsFold predicate on the "mall_code" field.
func MallCodeContainsFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContainsFold(FieldMallCode, v))
}

// MallNameEQ applies the EQ predicate on the "mall_name" field.
func MallNameEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldMallName, v))
}

// MallNameNEQ applies the NEQ predicate on the "mall_name" field.
func MallNameNEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldMallName, v))
}

// MallNameIn applies the In predicate on the "mall_name" field.
func MallNameIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldMallName, vs...))
}

// MallNameNotIn applies the NotIn predicate on the "mall_name" field.
func MallNameNotIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldMallName, vs...))
}

// MallNameGT applies the GT predicate on the "mall_name" field.
func MallNameGT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldMallName, v))
}

// MallNameGTE applies the GTE predicate on the "mall_name" field.
func MallNameGTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldMallName, v))
}

// MallNameLT applies the LT predicate on the "mall_name" field.
func MallNameLT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldMallName, v))
}

// MallNameLTE applies the LTE predicate on the "mall_name" field.
func MallNameLTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldMallName, v))
}

// MallNameContains applies the Contains predicate on the "mall_name" field.
func MallNameContains(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContains(FieldMallName, v))
}

// MallNameHasPrefix applies the HasPrefix predicate on the "mall_name" field.
func MallNameHasPrefix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasPrefix(FieldMallName, v))
}

// MallNameHasSuffix applies the HasSuffix predicate on the "mall_name" field.
func MallNameHasSuffix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasSuffix(FieldMallName, v))
}

// MallNameEqualFold applies the EqualFold predicate on the "mall_name" field.
func MallNameEqualFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEqualFold(FieldMallName, v))
}

// MallNameContainsFold applies the ContainsFold predicate on the "mall_name" field.
func MallNameContainsFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContainsFold(FieldMallName, v))
}

// H3Index6EQ applies the EQ predicate on the "h3_index_6" field.
func H3Index6EQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldH3Index6, v))
}

// H3Index6NEQ applies the NEQ predicate on the "h3_index_6" field.
func H3Index6NEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldH3Index6, v))
}

// H3Index6In applies the In predicate on the "h3_index_6" field.
func H3Index6In(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldH3Index6, vs...))
}

// H3Index6NotIn applies the NotIn predicate on the "h3_index_6" field.
func H3Index6NotIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldH3Index6, vs...))
}

// H3Index6GT applies the GT predicate on the "h3_index_6" field.
func H3Index6GT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldH3Index6, v))
}

// H3Index6GTE applies the GTE predicate on the "h3_index_6" field.
func H3Index6GTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldH3Index6, v))
}

// H3Index6LT applies the LT predicate on the "h3_index_6" field.
func H3Index6LT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldH3Index6, v))
}

// H3Index6LTE applies the LTE predicate on the "h3_index_6" field.
func H3Index6LTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldH3Index6, v))
}

// H3Index6Contains applies the Contains predicate on the "h3_index_6" field.
func H3Index6Contains(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContains(FieldH3Index6, v))
}

// H3Index6HasPrefix applies the HasPrefix predicate on the "h3_index_6" field.
func H3Index6HasPrefix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasPrefix(FieldH3Index6, v))
}

// H3Index6HasSuffix applies the HasSuffix predicate on the "h3_index_6" field.
func H3Index6HasSuffix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasSuffix(FieldH3Index6, v))
}

// H3Index6EqualFold applies the EqualFold predicate on the "h3_index_6" field.
func H3Index6EqualFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEqualFold(FieldH3Index6, v))
}

// H3Index6ContainsFold applies the ContainsFold predicate on the "h3_index_6" field.
func H3Index6ContainsFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContainsFold(FieldH3Index6, v))
}

// H3Index7EQ applies the EQ predicate on the "h3_index_7" field.
func H3Index7EQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldH3Index7, v))
}

// H3Index7NEQ applies the NEQ predicate on the "h3_index_7" field.
func H3Index7NEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldH3Index7, v))
}

// H3Index7In applies the In predicate on the "h3_index_7" field.
func H3Index7In(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldH3Index7, vs...))
}

// H3Index7NotIn applies the NotIn predicate on the "h3_index_7" field.
func H3Index7NotIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldH3Index7, vs...))
}

// H3Index7GT applies the GT predicate on the "h3_index_7" field.
func H3Index7GT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldH3Index7, v))
}

// H3Index7GTE applies the GTE predicate on the "h3_index_7" field.
func H3Index7GTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldH3Index7, v))
}

// H3Index7LT applies the LT predicate on the "h3_index_7" field.
func H3Index7LT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldH3Index7, v))
}

// H3Index7LTE applies the LTE predicate on the "h3_index_7" field.
func H3Index7LTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldH3Index7, v))
}

// H3Index7Contains applies the Contains predicate on the "h3_index_7" field.
func H3Index7Contains(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContains(FieldH3Index7, v))
}

// H3Index7HasPrefix applies the HasPrefix predicate on the "h3_index_7" field.
func H3Index7HasPrefix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasPrefix(FieldH3Index7, v))
}

// H3Index7HasSuffix applies the HasSuffix predicate on the "h3_index_7" field.
func H3Index7HasSuffix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasSuffix(FieldH3Index7, v))
}

// H3Index7EqualFold applies the EqualFold predicate on the "h3_index_7" field.
func H3Index7EqualFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEqualFold(FieldH3Index7, v))
}

// H3Index7ContainsFold applies the ContainsFold predicate on the "h3_index_7" field.
func H3Index7ContainsFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContainsFold(FieldH3Index7, v))
}

// H3Index8EQ applies the EQ predicate on the "h3_index_8" field.
func H3Index8EQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldH3Index8, v))
}

// H3Index8NEQ applies the NEQ predicate on the "h3_index_8" field.
func H3Index8NEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldH3Index8, v))
}

// H3Index8In applies the In predicate on the "h3_index_8" field.
func H3Index8In(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldH3Index8, vs...))
}

// H3Index8NotIn applies the NotIn predicate on the "h3_index_8" field.
func H3Index8NotIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldH3Index8, vs...))
}

// H3Index8GT applies the GT predicate on the "h3_index_8" field.
func H3Index8GT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldH3Index8, v))
}

// H3Index8GTE applies the GTE predicate on the "h3_index_8" field.
func H3Index8GTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldH3Index8, v))
}

// H3Index8LT applies the LT predicate on the "h3_index_8" field.
func H3Index8LT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldH3Index8, v))
}

// H3Index8LTE applies the LTE predicate on the "h3_index_8" field.
func H3Index8LTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldH3Index8, v))
}

// H3Index8Contains applies the Contains predicate on the "h3_index_8" field.
func H3Index8Contains(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContains(FieldH3Index8, v))
}

// H3Index8HasPrefix applies the HasPrefix predicate on the "h3_index_8" field.
func H3Index8HasPrefix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasPrefix(FieldH3Index8, v))
}

// H3Index8HasSuffix applies the HasSuffix predicate on the "h3_index_8" field.
func H3Index8HasSuffix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasSuffix(FieldH3Index8, v))
}

// H3Index8EqualFold applies the EqualFold predicate on the "h3_index_8" field.
func H3Index8EqualFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEqualFold(FieldH3Index8, v))
}

// H3Index8ContainsFold applies the ContainsFold predicate on the "h3_index_8" field.
func H3Index8ContainsFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContainsFold(FieldH3Index8, v))
}

// ImgPathEQ applies the EQ predicate on the "img_path" field.
func ImgPathEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldImgPath, v))
}

// ImgPathNEQ applies the NEQ predicate on the "img_path" field.
func ImgPathNEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldImgPath, v))
}

// ImgPathIn applies the In predicate on the "img_path" field.
func ImgPathIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldImgPath, vs...))
}

// ImgPathNotIn applies the NotIn predicate on the "img_path" field.
func ImgPathNotIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldImgPath, vs...))
}

// ImgPathGT applies the GT predicate on the "img_path" field.
func ImgPathGT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldImgPath, v))
}

// ImgPathGTE applies the GTE predicate on the "img_path" field.
func ImgPathGTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldImgPath, v))
}

// ImgPathLT applies the LT predicate on the "img_path" field.
func ImgPathLT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldImgPath, v))
}

// ImgPathLTE applies the LTE predicate on the "img_path" field.
func ImgPathLTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldImgPath, v))
}

// ImgPathContains applies the Contains predicate on the "img_path" field.
func ImgPathContains(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContains(FieldImgPath, v))
}

// ImgPathHasPrefix applies the HasPrefix predicate on the "img_path" field.
func ImgPathHasPrefix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasPrefix(FieldImgPath, v))
}

// ImgPathHasSuffix applies the HasSuffix predicate on the "img_path" field.
func ImgPathHasSuffix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasSuffix(FieldImgPath, v))
}

// ImgPathEqualFold applies the EqualFold predicate on the "img_path" field.
func ImgPathEqualFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEqualFold(FieldImgPath, v))
}

// ImgPathContainsFold applies the ContainsFold predicate on the "img_path" field.
func ImgPathContainsFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContainsFold(FieldImgPath, v))
}

// URLEQ applies the EQ predicate on the "url" field.
func URLEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldURL, v))
}

// URLNEQ applies the NEQ predicate on the "url" field.
func URLNEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldURL, v))
}

// URLIn applies the In predicate on the "url" field.
func URLIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldURL, vs...))
}

// URLNotIn applies the NotIn predicate on the "url" field.
func URLNotIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldURL, vs...))
}

// URLGT applies the GT predicate on the "url" field.
func URLGT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldURL, v))
}

// URLGTE applies the GTE predicate on the "url" field.
func URLGTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldURL, v))
}

// URLLT applies the LT predicate on the "url" field.
func URLLT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldURL, v))
}

// URLLTE applies the LTE predicate on the "url" field.
func URLLTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldURL, v))
}

// URLContains applies the Contains predicate on the "url" field.
func URLContains(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContains(FieldURL, v))
}

// URLHasPrefix applies the HasPrefix predicate on the "url" field.
func URLHasPrefix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasPrefix(FieldURL, v))
}

// URLHasSuffix applies the HasSuffix predicate on the "url" field.
func URLHasSuffix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasSuffix(FieldURL, v))
}

// URLEqualFold applies the EqualFold predicate on the "url" field.
func URLEqualFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEqualFold(FieldURL, v))
}

// URLContainsFold applies the ContainsFold predicate on the "url" field.
func URLContainsFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContainsFold(FieldURL, v))
}

// RulerEQ applies the EQ predicate on the "ruler" field.
func RulerEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldRuler, v))
}

// RulerNEQ applies the NEQ predicate on the "ruler" field.
func RulerNEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldRuler, v))
}

// RulerIn applies the In predicate on the "ruler" field.
func RulerIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldRuler, vs...))
}

// RulerNotIn applies the NotIn predicate on the "ruler" field.
func RulerNotIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldRuler, vs...))
}

// RulerGT applies the GT predicate on the "ruler" field.
func RulerGT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldRuler, v))
}

// RulerGTE applies the GTE predicate on the "ruler" field.
func RulerGTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldRuler, v))
}

// RulerLT applies the LT predicate on the "ruler" field.
func RulerLT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldRuler, v))
}

// RulerLTE applies the LTE predicate on the "ruler" field.
func RulerLTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldRuler, v))
}

// RulerContains applies the Contains predicate on the "ruler" field.
func RulerContains(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContains(FieldRuler, v))
}

// RulerHasPrefix applies the HasPrefix predicate on the "ruler" field.
func RulerHasPrefix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasPrefix(FieldRuler, v))
}

// RulerHasSuffix applies the HasSuffix predicate on the "ruler" field.
func RulerHasSuffix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasSuffix(FieldRuler, v))
}

// RulerEqualFold applies the EqualFold predicate on the "ruler" field.
func RulerEqualFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEqualFold(FieldRuler, v))
}

// RulerContainsFold applies the ContainsFold predicate on the "ruler" field.
func RulerContainsFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContainsFold(FieldRuler, v))
}

// OrdEQ applies the EQ predicate on the "ord" field.
func OrdEQ(v int) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldOrd, v))
}

// OrdNEQ applies the NEQ predicate on the "ord" field.
func OrdNEQ(v int) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldOrd, v))
}

// OrdIn applies the In predicate on the "ord" field.
func OrdIn(vs ...int) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldOrd, vs...))
}

// OrdNotIn applies the NotIn predicate on the "ord" field.
func OrdNotIn(vs ...int) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldOrd, vs...))
}

// OrdGT applies the GT predicate on the "ord" field.
func OrdGT(v int) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldOrd, v))
}

// OrdGTE applies the GTE predicate on the "ord" field.
func OrdGTE(v int) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldOrd, v))
}

// OrdLT applies the LT predicate on the "ord" field.
func OrdLT(v int) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldOrd, v))
}

// OrdLTE applies the LTE predicate on the "ord" field.
func OrdLTE(v int) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldOrd, v))
}

// MemoEQ applies the EQ predicate on the "memo" field.
func MemoEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldMemo, v))
}

// MemoNEQ applies the NEQ predicate on the "memo" field.
func MemoNEQ(v string) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldMemo, v))
}

// MemoIn applies the In predicate on the "memo" field.
func MemoIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldMemo, vs...))
}

// MemoNotIn applies the NotIn predicate on the "memo" field.
func MemoNotIn(vs ...string) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldMemo, vs...))
}

// MemoGT applies the GT predicate on the "memo" field.
func MemoGT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldMemo, v))
}

// MemoGTE applies the GTE predicate on the "memo" field.
func MemoGTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldMemo, v))
}

// MemoLT applies the LT predicate on the "memo" field.
func MemoLT(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldMemo, v))
}

// MemoLTE applies the LTE predicate on the "memo" field.
func MemoLTE(v string) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldMemo, v))
}

// MemoContains applies the Contains predicate on the "memo" field.
func MemoContains(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContains(FieldMemo, v))
}

// MemoHasPrefix applies the HasPrefix predicate on the "memo" field.
func MemoHasPrefix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasPrefix(FieldMemo, v))
}

// MemoHasSuffix applies the HasSuffix predicate on the "memo" field.
func MemoHasSuffix(v string) predicate.Adv {
	return predicate.Adv(sql.FieldHasSuffix(FieldMemo, v))
}

// MemoEqualFold applies the EqualFold predicate on the "memo" field.
func MemoEqualFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldEqualFold(FieldMemo, v))
}

// MemoContainsFold applies the ContainsFold predicate on the "memo" field.
func MemoContainsFold(v string) predicate.Adv {
	return predicate.Adv(sql.FieldContainsFold(FieldMemo, v))
}

// StartTimeEQ applies the EQ predicate on the "start_time" field.
func StartTimeEQ(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldStartTime, v))
}

// StartTimeNEQ applies the NEQ predicate on the "start_time" field.
func StartTimeNEQ(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldStartTime, v))
}

// StartTimeIn applies the In predicate on the "start_time" field.
func StartTimeIn(vs ...time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldStartTime, vs...))
}

// StartTimeNotIn applies the NotIn predicate on the "start_time" field.
func StartTimeNotIn(vs ...time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldStartTime, vs...))
}

// StartTimeGT applies the GT predicate on the "start_time" field.
func StartTimeGT(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldStartTime, v))
}

// StartTimeGTE applies the GTE predicate on the "start_time" field.
func StartTimeGTE(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldStartTime, v))
}

// StartTimeLT applies the LT predicate on the "start_time" field.
func StartTimeLT(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldStartTime, v))
}

// StartTimeLTE applies the LTE predicate on the "start_time" field.
func StartTimeLTE(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldStartTime, v))
}

// EndTimeEQ applies the EQ predicate on the "end_time" field.
func EndTimeEQ(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldEndTime, v))
}

// EndTimeNEQ applies the NEQ predicate on the "end_time" field.
func EndTimeNEQ(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldEndTime, v))
}

// EndTimeIn applies the In predicate on the "end_time" field.
func EndTimeIn(vs ...time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldEndTime, vs...))
}

// EndTimeNotIn applies the NotIn predicate on the "end_time" field.
func EndTimeNotIn(vs ...time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldEndTime, vs...))
}

// EndTimeGT applies the GT predicate on the "end_time" field.
func EndTimeGT(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldEndTime, v))
}

// EndTimeGTE applies the GTE predicate on the "end_time" field.
func EndTimeGTE(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldEndTime, v))
}

// EndTimeLT applies the LT predicate on the "end_time" field.
func EndTimeLT(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldEndTime, v))
}

// EndTimeLTE applies the LTE predicate on the "end_time" field.
func EndTimeLTE(v time.Time) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldEndTime, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int) predicate.Adv {
	return predicate.Adv(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int) predicate.Adv {
	return predicate.Adv(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int) predicate.Adv {
	return predicate.Adv(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int) predicate.Adv {
	return predicate.Adv(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int) predicate.Adv {
	return predicate.Adv(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int) predicate.Adv {
	return predicate.Adv(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int) predicate.Adv {
	return predicate.Adv(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int) predicate.Adv {
	return predicate.Adv(sql.FieldLTE(FieldStatus, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Adv) predicate.Adv {
	return predicate.Adv(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Adv) predicate.Adv {
	return predicate.Adv(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Adv) predicate.Adv {
	return predicate.Adv(sql.NotPredicates(p))
}
