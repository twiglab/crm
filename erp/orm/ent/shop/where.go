// Code generated by ent, DO NOT EDIT.

package shop

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/twiglab/crm/erp/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldUpdateTime, v))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldCode, v))
}

// MallCode applies equality check predicate on the "mall_code" field. It's identical to MallCodeEQ.
func MallCode(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldMallCode, v))
}

// MallName applies equality check predicate on the "mall_name" field. It's identical to MallNameEQ.
func MallName(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldMallName, v))
}

// ContractCode applies equality check predicate on the "contract_code" field. It's identical to ContractCodeEQ.
func ContractCode(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldContractCode, v))
}

// PosCode applies equality check predicate on the "pos_code" field. It's identical to PosCodeEQ.
func PosCode(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldPosCode, v))
}

// ShopCode applies equality check predicate on the "shop_code" field. It's identical to ShopCodeEQ.
func ShopCode(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldShopCode, v))
}

// ShopName applies equality check predicate on the "shop_name" field. It's identical to ShopNameEQ.
func ShopName(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldShopName, v))
}

// BizClass1 applies equality check predicate on the "biz_class_1" field. It's identical to BizClass1EQ.
func BizClass1(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizClass1, v))
}

// BizClassName1 applies equality check predicate on the "biz_class_name_1" field. It's identical to BizClassName1EQ.
func BizClassName1(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizClassName1, v))
}

// BizClass2 applies equality check predicate on the "biz_class_2" field. It's identical to BizClass2EQ.
func BizClass2(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizClass2, v))
}

// BizClassName2 applies equality check predicate on the "biz_class_name_2" field. It's identical to BizClassName2EQ.
func BizClassName2(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizClassName2, v))
}

// BizBeginTime applies equality check predicate on the "biz_begin_time" field. It's identical to BizBeginTimeEQ.
func BizBeginTime(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizBeginTime, v))
}

// BizEndTime applies equality check predicate on the "biz_end_time" field. It's identical to BizEndTimeEQ.
func BizEndTime(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizEndTime, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldStatus, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldUpdateTime, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContainsFold(FieldCode, v))
}

// MallCodeEQ applies the EQ predicate on the "mall_code" field.
func MallCodeEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldMallCode, v))
}

// MallCodeNEQ applies the NEQ predicate on the "mall_code" field.
func MallCodeNEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldMallCode, v))
}

// MallCodeIn applies the In predicate on the "mall_code" field.
func MallCodeIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldMallCode, vs...))
}

// MallCodeNotIn applies the NotIn predicate on the "mall_code" field.
func MallCodeNotIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldMallCode, vs...))
}

// MallCodeGT applies the GT predicate on the "mall_code" field.
func MallCodeGT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldMallCode, v))
}

// MallCodeGTE applies the GTE predicate on the "mall_code" field.
func MallCodeGTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldMallCode, v))
}

// MallCodeLT applies the LT predicate on the "mall_code" field.
func MallCodeLT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldMallCode, v))
}

// MallCodeLTE applies the LTE predicate on the "mall_code" field.
func MallCodeLTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldMallCode, v))
}

// MallCodeContains applies the Contains predicate on the "mall_code" field.
func MallCodeContains(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContains(FieldMallCode, v))
}

// MallCodeHasPrefix applies the HasPrefix predicate on the "mall_code" field.
func MallCodeHasPrefix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasPrefix(FieldMallCode, v))
}

// MallCodeHasSuffix applies the HasSuffix predicate on the "mall_code" field.
func MallCodeHasSuffix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasSuffix(FieldMallCode, v))
}

// MallCodeEqualFold applies the EqualFold predicate on the "mall_code" field.
func MallCodeEqualFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEqualFold(FieldMallCode, v))
}

// MallCodeContainsFold applies the ContainsFold predicate on the "mall_code" field.
func MallCodeContainsFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContainsFold(FieldMallCode, v))
}

// MallNameEQ applies the EQ predicate on the "mall_name" field.
func MallNameEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldMallName, v))
}

// MallNameNEQ applies the NEQ predicate on the "mall_name" field.
func MallNameNEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldMallName, v))
}

// MallNameIn applies the In predicate on the "mall_name" field.
func MallNameIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldMallName, vs...))
}

// MallNameNotIn applies the NotIn predicate on the "mall_name" field.
func MallNameNotIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldMallName, vs...))
}

// MallNameGT applies the GT predicate on the "mall_name" field.
func MallNameGT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldMallName, v))
}

// MallNameGTE applies the GTE predicate on the "mall_name" field.
func MallNameGTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldMallName, v))
}

// MallNameLT applies the LT predicate on the "mall_name" field.
func MallNameLT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldMallName, v))
}

// MallNameLTE applies the LTE predicate on the "mall_name" field.
func MallNameLTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldMallName, v))
}

// MallNameContains applies the Contains predicate on the "mall_name" field.
func MallNameContains(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContains(FieldMallName, v))
}

// MallNameHasPrefix applies the HasPrefix predicate on the "mall_name" field.
func MallNameHasPrefix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasPrefix(FieldMallName, v))
}

// MallNameHasSuffix applies the HasSuffix predicate on the "mall_name" field.
func MallNameHasSuffix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasSuffix(FieldMallName, v))
}

// MallNameEqualFold applies the EqualFold predicate on the "mall_name" field.
func MallNameEqualFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEqualFold(FieldMallName, v))
}

// MallNameContainsFold applies the ContainsFold predicate on the "mall_name" field.
func MallNameContainsFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContainsFold(FieldMallName, v))
}

// ContractCodeEQ applies the EQ predicate on the "contract_code" field.
func ContractCodeEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldContractCode, v))
}

// ContractCodeNEQ applies the NEQ predicate on the "contract_code" field.
func ContractCodeNEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldContractCode, v))
}

// ContractCodeIn applies the In predicate on the "contract_code" field.
func ContractCodeIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldContractCode, vs...))
}

// ContractCodeNotIn applies the NotIn predicate on the "contract_code" field.
func ContractCodeNotIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldContractCode, vs...))
}

// ContractCodeGT applies the GT predicate on the "contract_code" field.
func ContractCodeGT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldContractCode, v))
}

// ContractCodeGTE applies the GTE predicate on the "contract_code" field.
func ContractCodeGTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldContractCode, v))
}

// ContractCodeLT applies the LT predicate on the "contract_code" field.
func ContractCodeLT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldContractCode, v))
}

// ContractCodeLTE applies the LTE predicate on the "contract_code" field.
func ContractCodeLTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldContractCode, v))
}

// ContractCodeContains applies the Contains predicate on the "contract_code" field.
func ContractCodeContains(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContains(FieldContractCode, v))
}

// ContractCodeHasPrefix applies the HasPrefix predicate on the "contract_code" field.
func ContractCodeHasPrefix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasPrefix(FieldContractCode, v))
}

// ContractCodeHasSuffix applies the HasSuffix predicate on the "contract_code" field.
func ContractCodeHasSuffix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasSuffix(FieldContractCode, v))
}

// ContractCodeEqualFold applies the EqualFold predicate on the "contract_code" field.
func ContractCodeEqualFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEqualFold(FieldContractCode, v))
}

// ContractCodeContainsFold applies the ContainsFold predicate on the "contract_code" field.
func ContractCodeContainsFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContainsFold(FieldContractCode, v))
}

// PosCodeEQ applies the EQ predicate on the "pos_code" field.
func PosCodeEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldPosCode, v))
}

// PosCodeNEQ applies the NEQ predicate on the "pos_code" field.
func PosCodeNEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldPosCode, v))
}

// PosCodeIn applies the In predicate on the "pos_code" field.
func PosCodeIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldPosCode, vs...))
}

// PosCodeNotIn applies the NotIn predicate on the "pos_code" field.
func PosCodeNotIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldPosCode, vs...))
}

// PosCodeGT applies the GT predicate on the "pos_code" field.
func PosCodeGT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldPosCode, v))
}

// PosCodeGTE applies the GTE predicate on the "pos_code" field.
func PosCodeGTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldPosCode, v))
}

// PosCodeLT applies the LT predicate on the "pos_code" field.
func PosCodeLT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldPosCode, v))
}

// PosCodeLTE applies the LTE predicate on the "pos_code" field.
func PosCodeLTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldPosCode, v))
}

// PosCodeContains applies the Contains predicate on the "pos_code" field.
func PosCodeContains(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContains(FieldPosCode, v))
}

// PosCodeHasPrefix applies the HasPrefix predicate on the "pos_code" field.
func PosCodeHasPrefix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasPrefix(FieldPosCode, v))
}

// PosCodeHasSuffix applies the HasSuffix predicate on the "pos_code" field.
func PosCodeHasSuffix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasSuffix(FieldPosCode, v))
}

// PosCodeEqualFold applies the EqualFold predicate on the "pos_code" field.
func PosCodeEqualFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEqualFold(FieldPosCode, v))
}

// PosCodeContainsFold applies the ContainsFold predicate on the "pos_code" field.
func PosCodeContainsFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContainsFold(FieldPosCode, v))
}

// ShopCodeEQ applies the EQ predicate on the "shop_code" field.
func ShopCodeEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldShopCode, v))
}

// ShopCodeNEQ applies the NEQ predicate on the "shop_code" field.
func ShopCodeNEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldShopCode, v))
}

// ShopCodeIn applies the In predicate on the "shop_code" field.
func ShopCodeIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldShopCode, vs...))
}

// ShopCodeNotIn applies the NotIn predicate on the "shop_code" field.
func ShopCodeNotIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldShopCode, vs...))
}

// ShopCodeGT applies the GT predicate on the "shop_code" field.
func ShopCodeGT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldShopCode, v))
}

// ShopCodeGTE applies the GTE predicate on the "shop_code" field.
func ShopCodeGTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldShopCode, v))
}

// ShopCodeLT applies the LT predicate on the "shop_code" field.
func ShopCodeLT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldShopCode, v))
}

// ShopCodeLTE applies the LTE predicate on the "shop_code" field.
func ShopCodeLTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldShopCode, v))
}

// ShopCodeContains applies the Contains predicate on the "shop_code" field.
func ShopCodeContains(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContains(FieldShopCode, v))
}

// ShopCodeHasPrefix applies the HasPrefix predicate on the "shop_code" field.
func ShopCodeHasPrefix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasPrefix(FieldShopCode, v))
}

// ShopCodeHasSuffix applies the HasSuffix predicate on the "shop_code" field.
func ShopCodeHasSuffix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasSuffix(FieldShopCode, v))
}

// ShopCodeEqualFold applies the EqualFold predicate on the "shop_code" field.
func ShopCodeEqualFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEqualFold(FieldShopCode, v))
}

// ShopCodeContainsFold applies the ContainsFold predicate on the "shop_code" field.
func ShopCodeContainsFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContainsFold(FieldShopCode, v))
}

// ShopNameEQ applies the EQ predicate on the "shop_name" field.
func ShopNameEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldShopName, v))
}

// ShopNameNEQ applies the NEQ predicate on the "shop_name" field.
func ShopNameNEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldShopName, v))
}

// ShopNameIn applies the In predicate on the "shop_name" field.
func ShopNameIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldShopName, vs...))
}

// ShopNameNotIn applies the NotIn predicate on the "shop_name" field.
func ShopNameNotIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldShopName, vs...))
}

// ShopNameGT applies the GT predicate on the "shop_name" field.
func ShopNameGT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldShopName, v))
}

// ShopNameGTE applies the GTE predicate on the "shop_name" field.
func ShopNameGTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldShopName, v))
}

// ShopNameLT applies the LT predicate on the "shop_name" field.
func ShopNameLT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldShopName, v))
}

// ShopNameLTE applies the LTE predicate on the "shop_name" field.
func ShopNameLTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldShopName, v))
}

// ShopNameContains applies the Contains predicate on the "shop_name" field.
func ShopNameContains(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContains(FieldShopName, v))
}

// ShopNameHasPrefix applies the HasPrefix predicate on the "shop_name" field.
func ShopNameHasPrefix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasPrefix(FieldShopName, v))
}

// ShopNameHasSuffix applies the HasSuffix predicate on the "shop_name" field.
func ShopNameHasSuffix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasSuffix(FieldShopName, v))
}

// ShopNameEqualFold applies the EqualFold predicate on the "shop_name" field.
func ShopNameEqualFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEqualFold(FieldShopName, v))
}

// ShopNameContainsFold applies the ContainsFold predicate on the "shop_name" field.
func ShopNameContainsFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContainsFold(FieldShopName, v))
}

// BizClass1EQ applies the EQ predicate on the "biz_class_1" field.
func BizClass1EQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizClass1, v))
}

// BizClass1NEQ applies the NEQ predicate on the "biz_class_1" field.
func BizClass1NEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldBizClass1, v))
}

// BizClass1In applies the In predicate on the "biz_class_1" field.
func BizClass1In(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldBizClass1, vs...))
}

// BizClass1NotIn applies the NotIn predicate on the "biz_class_1" field.
func BizClass1NotIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldBizClass1, vs...))
}

// BizClass1GT applies the GT predicate on the "biz_class_1" field.
func BizClass1GT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldBizClass1, v))
}

// BizClass1GTE applies the GTE predicate on the "biz_class_1" field.
func BizClass1GTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldBizClass1, v))
}

// BizClass1LT applies the LT predicate on the "biz_class_1" field.
func BizClass1LT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldBizClass1, v))
}

// BizClass1LTE applies the LTE predicate on the "biz_class_1" field.
func BizClass1LTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldBizClass1, v))
}

// BizClass1Contains applies the Contains predicate on the "biz_class_1" field.
func BizClass1Contains(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContains(FieldBizClass1, v))
}

// BizClass1HasPrefix applies the HasPrefix predicate on the "biz_class_1" field.
func BizClass1HasPrefix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasPrefix(FieldBizClass1, v))
}

// BizClass1HasSuffix applies the HasSuffix predicate on the "biz_class_1" field.
func BizClass1HasSuffix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasSuffix(FieldBizClass1, v))
}

// BizClass1IsNil applies the IsNil predicate on the "biz_class_1" field.
func BizClass1IsNil() predicate.Shop {
	return predicate.Shop(sql.FieldIsNull(FieldBizClass1))
}

// BizClass1NotNil applies the NotNil predicate on the "biz_class_1" field.
func BizClass1NotNil() predicate.Shop {
	return predicate.Shop(sql.FieldNotNull(FieldBizClass1))
}

// BizClass1EqualFold applies the EqualFold predicate on the "biz_class_1" field.
func BizClass1EqualFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEqualFold(FieldBizClass1, v))
}

// BizClass1ContainsFold applies the ContainsFold predicate on the "biz_class_1" field.
func BizClass1ContainsFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContainsFold(FieldBizClass1, v))
}

// BizClassName1EQ applies the EQ predicate on the "biz_class_name_1" field.
func BizClassName1EQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizClassName1, v))
}

// BizClassName1NEQ applies the NEQ predicate on the "biz_class_name_1" field.
func BizClassName1NEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldBizClassName1, v))
}

// BizClassName1In applies the In predicate on the "biz_class_name_1" field.
func BizClassName1In(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldBizClassName1, vs...))
}

// BizClassName1NotIn applies the NotIn predicate on the "biz_class_name_1" field.
func BizClassName1NotIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldBizClassName1, vs...))
}

// BizClassName1GT applies the GT predicate on the "biz_class_name_1" field.
func BizClassName1GT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldBizClassName1, v))
}

// BizClassName1GTE applies the GTE predicate on the "biz_class_name_1" field.
func BizClassName1GTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldBizClassName1, v))
}

// BizClassName1LT applies the LT predicate on the "biz_class_name_1" field.
func BizClassName1LT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldBizClassName1, v))
}

// BizClassName1LTE applies the LTE predicate on the "biz_class_name_1" field.
func BizClassName1LTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldBizClassName1, v))
}

// BizClassName1Contains applies the Contains predicate on the "biz_class_name_1" field.
func BizClassName1Contains(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContains(FieldBizClassName1, v))
}

// BizClassName1HasPrefix applies the HasPrefix predicate on the "biz_class_name_1" field.
func BizClassName1HasPrefix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasPrefix(FieldBizClassName1, v))
}

// BizClassName1HasSuffix applies the HasSuffix predicate on the "biz_class_name_1" field.
func BizClassName1HasSuffix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasSuffix(FieldBizClassName1, v))
}

// BizClassName1IsNil applies the IsNil predicate on the "biz_class_name_1" field.
func BizClassName1IsNil() predicate.Shop {
	return predicate.Shop(sql.FieldIsNull(FieldBizClassName1))
}

// BizClassName1NotNil applies the NotNil predicate on the "biz_class_name_1" field.
func BizClassName1NotNil() predicate.Shop {
	return predicate.Shop(sql.FieldNotNull(FieldBizClassName1))
}

// BizClassName1EqualFold applies the EqualFold predicate on the "biz_class_name_1" field.
func BizClassName1EqualFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEqualFold(FieldBizClassName1, v))
}

// BizClassName1ContainsFold applies the ContainsFold predicate on the "biz_class_name_1" field.
func BizClassName1ContainsFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContainsFold(FieldBizClassName1, v))
}

// BizClass2EQ applies the EQ predicate on the "biz_class_2" field.
func BizClass2EQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizClass2, v))
}

// BizClass2NEQ applies the NEQ predicate on the "biz_class_2" field.
func BizClass2NEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldBizClass2, v))
}

// BizClass2In applies the In predicate on the "biz_class_2" field.
func BizClass2In(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldBizClass2, vs...))
}

// BizClass2NotIn applies the NotIn predicate on the "biz_class_2" field.
func BizClass2NotIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldBizClass2, vs...))
}

// BizClass2GT applies the GT predicate on the "biz_class_2" field.
func BizClass2GT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldBizClass2, v))
}

// BizClass2GTE applies the GTE predicate on the "biz_class_2" field.
func BizClass2GTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldBizClass2, v))
}

// BizClass2LT applies the LT predicate on the "biz_class_2" field.
func BizClass2LT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldBizClass2, v))
}

// BizClass2LTE applies the LTE predicate on the "biz_class_2" field.
func BizClass2LTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldBizClass2, v))
}

// BizClass2Contains applies the Contains predicate on the "biz_class_2" field.
func BizClass2Contains(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContains(FieldBizClass2, v))
}

// BizClass2HasPrefix applies the HasPrefix predicate on the "biz_class_2" field.
func BizClass2HasPrefix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasPrefix(FieldBizClass2, v))
}

// BizClass2HasSuffix applies the HasSuffix predicate on the "biz_class_2" field.
func BizClass2HasSuffix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasSuffix(FieldBizClass2, v))
}

// BizClass2IsNil applies the IsNil predicate on the "biz_class_2" field.
func BizClass2IsNil() predicate.Shop {
	return predicate.Shop(sql.FieldIsNull(FieldBizClass2))
}

// BizClass2NotNil applies the NotNil predicate on the "biz_class_2" field.
func BizClass2NotNil() predicate.Shop {
	return predicate.Shop(sql.FieldNotNull(FieldBizClass2))
}

// BizClass2EqualFold applies the EqualFold predicate on the "biz_class_2" field.
func BizClass2EqualFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEqualFold(FieldBizClass2, v))
}

// BizClass2ContainsFold applies the ContainsFold predicate on the "biz_class_2" field.
func BizClass2ContainsFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContainsFold(FieldBizClass2, v))
}

// BizClassName2EQ applies the EQ predicate on the "biz_class_name_2" field.
func BizClassName2EQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizClassName2, v))
}

// BizClassName2NEQ applies the NEQ predicate on the "biz_class_name_2" field.
func BizClassName2NEQ(v string) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldBizClassName2, v))
}

// BizClassName2In applies the In predicate on the "biz_class_name_2" field.
func BizClassName2In(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldBizClassName2, vs...))
}

// BizClassName2NotIn applies the NotIn predicate on the "biz_class_name_2" field.
func BizClassName2NotIn(vs ...string) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldBizClassName2, vs...))
}

// BizClassName2GT applies the GT predicate on the "biz_class_name_2" field.
func BizClassName2GT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldBizClassName2, v))
}

// BizClassName2GTE applies the GTE predicate on the "biz_class_name_2" field.
func BizClassName2GTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldBizClassName2, v))
}

// BizClassName2LT applies the LT predicate on the "biz_class_name_2" field.
func BizClassName2LT(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldBizClassName2, v))
}

// BizClassName2LTE applies the LTE predicate on the "biz_class_name_2" field.
func BizClassName2LTE(v string) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldBizClassName2, v))
}

// BizClassName2Contains applies the Contains predicate on the "biz_class_name_2" field.
func BizClassName2Contains(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContains(FieldBizClassName2, v))
}

// BizClassName2HasPrefix applies the HasPrefix predicate on the "biz_class_name_2" field.
func BizClassName2HasPrefix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasPrefix(FieldBizClassName2, v))
}

// BizClassName2HasSuffix applies the HasSuffix predicate on the "biz_class_name_2" field.
func BizClassName2HasSuffix(v string) predicate.Shop {
	return predicate.Shop(sql.FieldHasSuffix(FieldBizClassName2, v))
}

// BizClassName2IsNil applies the IsNil predicate on the "biz_class_name_2" field.
func BizClassName2IsNil() predicate.Shop {
	return predicate.Shop(sql.FieldIsNull(FieldBizClassName2))
}

// BizClassName2NotNil applies the NotNil predicate on the "biz_class_name_2" field.
func BizClassName2NotNil() predicate.Shop {
	return predicate.Shop(sql.FieldNotNull(FieldBizClassName2))
}

// BizClassName2EqualFold applies the EqualFold predicate on the "biz_class_name_2" field.
func BizClassName2EqualFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldEqualFold(FieldBizClassName2, v))
}

// BizClassName2ContainsFold applies the ContainsFold predicate on the "biz_class_name_2" field.
func BizClassName2ContainsFold(v string) predicate.Shop {
	return predicate.Shop(sql.FieldContainsFold(FieldBizClassName2, v))
}

// BizBeginTimeEQ applies the EQ predicate on the "biz_begin_time" field.
func BizBeginTimeEQ(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizBeginTime, v))
}

// BizBeginTimeNEQ applies the NEQ predicate on the "biz_begin_time" field.
func BizBeginTimeNEQ(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldBizBeginTime, v))
}

// BizBeginTimeIn applies the In predicate on the "biz_begin_time" field.
func BizBeginTimeIn(vs ...time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldBizBeginTime, vs...))
}

// BizBeginTimeNotIn applies the NotIn predicate on the "biz_begin_time" field.
func BizBeginTimeNotIn(vs ...time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldBizBeginTime, vs...))
}

// BizBeginTimeGT applies the GT predicate on the "biz_begin_time" field.
func BizBeginTimeGT(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldBizBeginTime, v))
}

// BizBeginTimeGTE applies the GTE predicate on the "biz_begin_time" field.
func BizBeginTimeGTE(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldBizBeginTime, v))
}

// BizBeginTimeLT applies the LT predicate on the "biz_begin_time" field.
func BizBeginTimeLT(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldBizBeginTime, v))
}

// BizBeginTimeLTE applies the LTE predicate on the "biz_begin_time" field.
func BizBeginTimeLTE(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldBizBeginTime, v))
}

// BizEndTimeEQ applies the EQ predicate on the "biz_end_time" field.
func BizEndTimeEQ(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldBizEndTime, v))
}

// BizEndTimeNEQ applies the NEQ predicate on the "biz_end_time" field.
func BizEndTimeNEQ(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldBizEndTime, v))
}

// BizEndTimeIn applies the In predicate on the "biz_end_time" field.
func BizEndTimeIn(vs ...time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldBizEndTime, vs...))
}

// BizEndTimeNotIn applies the NotIn predicate on the "biz_end_time" field.
func BizEndTimeNotIn(vs ...time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldBizEndTime, vs...))
}

// BizEndTimeGT applies the GT predicate on the "biz_end_time" field.
func BizEndTimeGT(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldBizEndTime, v))
}

// BizEndTimeGTE applies the GTE predicate on the "biz_end_time" field.
func BizEndTimeGTE(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldBizEndTime, v))
}

// BizEndTimeLT applies the LT predicate on the "biz_end_time" field.
func BizEndTimeLT(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldBizEndTime, v))
}

// BizEndTimeLTE applies the LTE predicate on the "biz_end_time" field.
func BizEndTimeLTE(v time.Time) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldBizEndTime, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int) predicate.Shop {
	return predicate.Shop(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int) predicate.Shop {
	return predicate.Shop(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int) predicate.Shop {
	return predicate.Shop(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int) predicate.Shop {
	return predicate.Shop(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int) predicate.Shop {
	return predicate.Shop(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int) predicate.Shop {
	return predicate.Shop(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int) predicate.Shop {
	return predicate.Shop(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int) predicate.Shop {
	return predicate.Shop(sql.FieldLTE(FieldStatus, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Shop) predicate.Shop {
	return predicate.Shop(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Shop) predicate.Shop {
	return predicate.Shop(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Shop) predicate.Shop {
	return predicate.Shop(sql.NotPredicates(p))
}
