// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// TShopColumns holds the columns for the "t_shop" table.
	TShopColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "code", Type: field.TypeString, Unique: true, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "mall_code", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "varchar(36)", "postgres": "varchar(36)", "sqlite3": "varchar(36)"}},
		{Name: "mall_name", Type: field.TypeString, Size: 256, SchemaType: map[string]string{"mysql": "varchar(256)", "postgres": "varchar(256)", "sqlite3": "varchar(256)"}},
		{Name: "contract_code", Type: field.TypeString, Unique: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "floor", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "varchar(36)", "postgres": "varchar(36)", "sqlite3": "varchar(36)"}},
		{Name: "pos", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "varchar(36)", "postgres": "varchar(36)", "sqlite3": "varchar(36)"}},
		{Name: "shop_code", Type: field.TypeString, Unique: true, Size: 36, SchemaType: map[string]string{"mysql": "varchar(36)", "postgres": "varchar(36)", "sqlite3": "varchar(36)"}},
		{Name: "shop_name", Type: field.TypeString, Size: 256, SchemaType: map[string]string{"mysql": "varchar(256)", "postgres": "varchar(256)", "sqlite3": "varchar(256)"}},
		{Name: "biz_class_1", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "biz_class_name_1", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "biz_class_2", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "biz_class_name_2", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "status", Type: field.TypeString, Size: 3, Default: "A00", SchemaType: map[string]string{"mysql": "char(3)", "postgres": "char(3)", "sqlite3": "char(3)"}},
	}
	// TShopTable holds the schema information for the "t_shop" table.
	TShopTable = &schema.Table{
		Name:       "t_shop",
		Columns:    TShopColumns,
		PrimaryKey: []*schema.Column{TShopColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "shop_code",
				Unique:  false,
				Columns: []*schema.Column{TShopColumns[3]},
			},
			{
				Name:    "shop_status",
				Unique:  false,
				Columns: []*schema.Column{TShopColumns[15]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		TShopTable,
	}
)

func init() {
	TShopTable.Annotation = &entsql.Annotation{
		Table: "t_shop",
	}
}
