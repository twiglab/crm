// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/twiglab/crm/card/orm/ent/card"
	"github.com/twiglab/crm/card/orm/ent/chargerecord"
	"github.com/twiglab/crm/card/orm/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	cardMixin := schema.Card{}.Mixin()
	cardMixinFields0 := cardMixin[0].Fields()
	_ = cardMixinFields0
	cardFields := schema.Card{}.Fields()
	_ = cardFields
	// cardDescCreateTime is the schema descriptor for create_time field.
	cardDescCreateTime := cardMixinFields0[0].Descriptor()
	// card.DefaultCreateTime holds the default value on creation for the create_time field.
	card.DefaultCreateTime = cardDescCreateTime.Default.(func() time.Time)
	// cardDescUpdateTime is the schema descriptor for update_time field.
	cardDescUpdateTime := cardMixinFields0[1].Descriptor()
	// card.DefaultUpdateTime holds the default value on creation for the update_time field.
	card.DefaultUpdateTime = cardDescUpdateTime.Default.(func() time.Time)
	// card.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	card.UpdateDefaultUpdateTime = cardDescUpdateTime.UpdateDefault.(func() time.Time)
	// cardDescCode is the schema descriptor for code field.
	cardDescCode := cardFields[0].Descriptor()
	// card.DefaultCode holds the default value on creation for the code field.
	card.DefaultCode = cardDescCode.Default.(func() string)
	// card.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	card.CodeValidator = func() func(string) error {
		validators := cardDescCode.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(code string) error {
			for _, fn := range fns {
				if err := fn(code); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// cardDescCardBin is the schema descriptor for card_bin field.
	cardDescCardBin := cardFields[1].Descriptor()
	// card.CardBinValidator is a validator for the "card_bin" field. It is called by the builders before save.
	card.CardBinValidator = func() func(string) error {
		validators := cardDescCardBin.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(card_bin string) error {
			for _, fn := range fns {
				if err := fn(card_bin); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// cardDescType is the schema descriptor for type field.
	cardDescType := cardFields[2].Descriptor()
	// card.DefaultType holds the default value on creation for the type field.
	card.DefaultType = cardDescType.Default.(int)
	// cardDescPic1 is the schema descriptor for pic1 field.
	cardDescPic1 := cardFields[3].Descriptor()
	// card.Pic1Validator is a validator for the "pic1" field. It is called by the builders before save.
	card.Pic1Validator = cardDescPic1.Validators[0].(func(string) error)
	// cardDescPic2 is the schema descriptor for pic2 field.
	cardDescPic2 := cardFields[4].Descriptor()
	// card.Pic2Validator is a validator for the "pic2" field. It is called by the builders before save.
	card.Pic2Validator = cardDescPic2.Validators[0].(func(string) error)
	// cardDescAmount is the schema descriptor for amount field.
	cardDescAmount := cardFields[5].Descriptor()
	// card.DefaultAmount holds the default value on creation for the amount field.
	card.DefaultAmount = cardDescAmount.Default.(int64)
	// cardDescMemberCode is the schema descriptor for member_code field.
	cardDescMemberCode := cardFields[6].Descriptor()
	// card.MemberCodeValidator is a validator for the "member_code" field. It is called by the builders before save.
	card.MemberCodeValidator = cardDescMemberCode.Validators[0].(func(string) error)
	// cardDescLastUseTs is the schema descriptor for last_use_ts field.
	cardDescLastUseTs := cardFields[8].Descriptor()
	// card.DefaultLastUseTs holds the default value on creation for the last_use_ts field.
	card.DefaultLastUseTs = cardDescLastUseTs.Default.(int64)
	// cardDescLastCleanBalance is the schema descriptor for last_clean_balance field.
	cardDescLastCleanBalance := cardFields[9].Descriptor()
	// card.DefaultLastCleanBalance holds the default value on creation for the last_clean_balance field.
	card.DefaultLastCleanBalance = cardDescLastCleanBalance.Default.(int64)
	// cardDescLastCleanTs is the schema descriptor for last_clean_ts field.
	cardDescLastCleanTs := cardFields[10].Descriptor()
	// card.DefaultLastCleanTs holds the default value on creation for the last_clean_ts field.
	card.DefaultLastCleanTs = cardDescLastCleanTs.Default.(int16)
	// cardDescStatus is the schema descriptor for status field.
	cardDescStatus := cardFields[11].Descriptor()
	// card.DefaultStatus holds the default value on creation for the status field.
	card.DefaultStatus = cardDescStatus.Default.(int)
	chargerecordMixin := schema.ChargeRecord{}.Mixin()
	chargerecordMixinFields0 := chargerecordMixin[0].Fields()
	_ = chargerecordMixinFields0
	chargerecordFields := schema.ChargeRecord{}.Fields()
	_ = chargerecordFields
	// chargerecordDescCreateTime is the schema descriptor for create_time field.
	chargerecordDescCreateTime := chargerecordMixinFields0[0].Descriptor()
	// chargerecord.DefaultCreateTime holds the default value on creation for the create_time field.
	chargerecord.DefaultCreateTime = chargerecordDescCreateTime.Default.(func() time.Time)
	// chargerecordDescUpdateTime is the schema descriptor for update_time field.
	chargerecordDescUpdateTime := chargerecordMixinFields0[1].Descriptor()
	// chargerecord.DefaultUpdateTime holds the default value on creation for the update_time field.
	chargerecord.DefaultUpdateTime = chargerecordDescUpdateTime.Default.(func() time.Time)
	// chargerecord.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	chargerecord.UpdateDefaultUpdateTime = chargerecordDescUpdateTime.UpdateDefault.(func() time.Time)
	// chargerecordDescCode is the schema descriptor for code field.
	chargerecordDescCode := chargerecordFields[0].Descriptor()
	// chargerecord.DefaultCode holds the default value on creation for the code field.
	chargerecord.DefaultCode = chargerecordDescCode.Default.(func() string)
	// chargerecord.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	chargerecord.CodeValidator = func() func(string) error {
		validators := chargerecordDescCode.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(code string) error {
			for _, fn := range fns {
				if err := fn(code); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// chargerecordDescPayCode is the schema descriptor for pay_code field.
	chargerecordDescPayCode := chargerecordFields[1].Descriptor()
	// chargerecord.PayCodeValidator is a validator for the "pay_code" field. It is called by the builders before save.
	chargerecord.PayCodeValidator = chargerecordDescPayCode.Validators[0].(func(string) error)
	// chargerecordDescPayTs is the schema descriptor for pay_ts field.
	chargerecordDescPayTs := chargerecordFields[2].Descriptor()
	// chargerecord.DefaultPayTs holds the default value on creation for the pay_ts field.
	chargerecord.DefaultPayTs = chargerecordDescPayTs.Default.(int64)
	// chargerecordDescDeduct is the schema descriptor for deduct field.
	chargerecordDescDeduct := chargerecordFields[3].Descriptor()
	// chargerecord.DefaultDeduct holds the default value on creation for the deduct field.
	chargerecord.DefaultDeduct = chargerecordDescDeduct.Default.(int64)
	// chargerecordDescCardCode is the schema descriptor for card_code field.
	chargerecordDescCardCode := chargerecordFields[4].Descriptor()
	// chargerecord.CardCodeValidator is a validator for the "card_code" field. It is called by the builders before save.
	chargerecord.CardCodeValidator = func() func(string) error {
		validators := chargerecordDescCardCode.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(card_code string) error {
			for _, fn := range fns {
				if err := fn(card_code); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// chargerecordDescStatus is the schema descriptor for status field.
	chargerecordDescStatus := chargerecordFields[5].Descriptor()
	// chargerecord.DefaultStatus holds the default value on creation for the status field.
	chargerecord.DefaultStatus = chargerecordDescStatus.Default.(int)
}
