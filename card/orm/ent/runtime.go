// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/twiglab/crm/card/orm/ent/card"
	"github.com/twiglab/crm/card/orm/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	cardMixin := schema.Card{}.Mixin()
	cardMixinFields0 := cardMixin[0].Fields()
	_ = cardMixinFields0
	cardFields := schema.Card{}.Fields()
	_ = cardFields
	// cardDescCreateTime is the schema descriptor for create_time field.
	cardDescCreateTime := cardMixinFields0[0].Descriptor()
	// card.DefaultCreateTime holds the default value on creation for the create_time field.
	card.DefaultCreateTime = cardDescCreateTime.Default.(func() time.Time)
	// cardDescUpdateTime is the schema descriptor for update_time field.
	cardDescUpdateTime := cardMixinFields0[1].Descriptor()
	// card.DefaultUpdateTime holds the default value on creation for the update_time field.
	card.DefaultUpdateTime = cardDescUpdateTime.Default.(func() time.Time)
	// card.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	card.UpdateDefaultUpdateTime = cardDescUpdateTime.UpdateDefault.(func() time.Time)
	// cardDescCode is the schema descriptor for code field.
	cardDescCode := cardFields[0].Descriptor()
	// card.DefaultCode holds the default value on creation for the code field.
	card.DefaultCode = cardDescCode.Default.(func() string)
	// card.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	card.CodeValidator = func() func(string) error {
		validators := cardDescCode.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(code string) error {
			for _, fn := range fns {
				if err := fn(code); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// cardDescCardCode is the schema descriptor for card_code field.
	cardDescCardCode := cardFields[1].Descriptor()
	// card.CardCodeValidator is a validator for the "card_code" field. It is called by the builders before save.
	card.CardCodeValidator = func() func(string) error {
		validators := cardDescCardCode.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(card_code string) error {
			for _, fn := range fns {
				if err := fn(card_code); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// cardDescMemberCode is the schema descriptor for member_code field.
	cardDescMemberCode := cardFields[2].Descriptor()
	// card.DefaultMemberCode holds the default value on creation for the member_code field.
	card.DefaultMemberCode = cardDescMemberCode.Default.(func() string)
	// card.MemberCodeValidator is a validator for the "member_code" field. It is called by the builders before save.
	card.MemberCodeValidator = cardDescMemberCode.Validators[0].(func(string) error)
	// cardDescType is the schema descriptor for type field.
	cardDescType := cardFields[3].Descriptor()
	// card.DefaultType holds the default value on creation for the type field.
	card.DefaultType = cardDescType.Default.(int)
	// cardDescBalance is the schema descriptor for balance field.
	cardDescBalance := cardFields[4].Descriptor()
	// card.DefaultBalance holds the default value on creation for the balance field.
	card.DefaultBalance = cardDescBalance.Default.(int)
	// cardDescAmount is the schema descriptor for amount field.
	cardDescAmount := cardFields[5].Descriptor()
	// card.DefaultAmount holds the default value on creation for the amount field.
	card.DefaultAmount = cardDescAmount.Default.(int)
	// cardDescStatus is the schema descriptor for status field.
	cardDescStatus := cardFields[6].Descriptor()
	// card.DefaultStatus holds the default value on creation for the status field.
	card.DefaultStatus = cardDescStatus.Default.(int)
}
