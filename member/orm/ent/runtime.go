// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/twiglab/crm/member/orm/ent/member"
	"github.com/twiglab/crm/member/orm/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	memberMixin := schema.Member{}.Mixin()
	memberMixinFields0 := memberMixin[0].Fields()
	_ = memberMixinFields0
	memberFields := schema.Member{}.Fields()
	_ = memberFields
	// memberDescCreateTime is the schema descriptor for create_time field.
	memberDescCreateTime := memberMixinFields0[0].Descriptor()
	// member.DefaultCreateTime holds the default value on creation for the create_time field.
	member.DefaultCreateTime = memberDescCreateTime.Default.(func() time.Time)
	// memberDescUpdateTime is the schema descriptor for update_time field.
	memberDescUpdateTime := memberMixinFields0[1].Descriptor()
	// member.DefaultUpdateTime holds the default value on creation for the update_time field.
	member.DefaultUpdateTime = memberDescUpdateTime.Default.(func() time.Time)
	// member.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	member.UpdateDefaultUpdateTime = memberDescUpdateTime.UpdateDefault.(func() time.Time)
	// memberDescCode is the schema descriptor for code field.
	memberDescCode := memberFields[1].Descriptor()
	// member.DefaultCode holds the default value on creation for the code field.
	member.DefaultCode = memberDescCode.Default.(func() string)
	// member.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	member.CodeValidator = func() func(string) error {
		validators := memberDescCode.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(code string) error {
			for _, fn := range fns {
				if err := fn(code); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// memberDescPhone is the schema descriptor for phone field.
	memberDescPhone := memberFields[2].Descriptor()
	// member.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	member.PhoneValidator = func() func(string) error {
		validators := memberDescPhone.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(phone string) error {
			for _, fn := range fns {
				if err := fn(phone); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// memberDescNickname is the schema descriptor for nickname field.
	memberDescNickname := memberFields[3].Descriptor()
	// member.NicknameValidator is a validator for the "nickname" field. It is called by the builders before save.
	member.NicknameValidator = memberDescNickname.Validators[0].(func(string) error)
	// memberDescWxOpenID is the schema descriptor for wx_open_id field.
	memberDescWxOpenID := memberFields[4].Descriptor()
	// member.WxOpenIDValidator is a validator for the "wx_open_id" field. It is called by the builders before save.
	member.WxOpenIDValidator = memberDescWxOpenID.Validators[0].(func(string) error)
	// memberDescWxUID is the schema descriptor for wx_uid field.
	memberDescWxUID := memberFields[5].Descriptor()
	// member.WxUIDValidator is a validator for the "wx_uid" field. It is called by the builders before save.
	member.WxUIDValidator = memberDescWxUID.Validators[0].(func(string) error)
	// memberDescWxMBCode is the schema descriptor for wx_mb_code field.
	memberDescWxMBCode := memberFields[6].Descriptor()
	// member.WxMBCodeValidator is a validator for the "wx_mb_code" field. It is called by the builders before save.
	member.WxMBCodeValidator = memberDescWxMBCode.Validators[0].(func(string) error)
	// memberDescStatus is the schema descriptor for status field.
	memberDescStatus := memberFields[8].Descriptor()
	// member.DefaultStatus holds the default value on creation for the status field.
	member.DefaultStatus = memberDescStatus.Default.(int)
	// memberDescID is the schema descriptor for id field.
	memberDescID := memberFields[0].Descriptor()
	// member.DefaultID holds the default value on creation for the id field.
	member.DefaultID = memberDescID.Default.(func() uuid.UUID)
}
