package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.62

import (
	"context"

	"github.com/twiglab/crm/member/orm"
	"github.com/twiglab/crm/member/pkg/data"
)

// WxCreateMember is the resolver for the wxCreateMember field.
func (r *mutationResolver) WxCreateMember(ctx context.Context, input data.WxCreateMemberReq) (*data.MemberResp, error) {
	mb, err := r.Op.WxCreateMember(ctx, orm.Param{
		OpenID:  input.WxOpenID,
		UnionID: input.WxUnionID,
		Code:    input.Code,
	})

	if err != nil {
		return nil, err
	}

	return &data.MemberResp{
		Code:     mb.Code,
		WxOpenID: mb.WxOpenID,
		Level:    mb.Level,
		Status:   mb.Status,
	}, nil
}

// WxLogin is the resolver for the wxLogin field.
func (r *mutationResolver) WxLogin(ctx context.Context, input data.OpenIDReq) (*data.WxLoginResp, error) {
	mb, ok, err := r.Op.WxLogin(ctx, orm.Param{OpenID: input.WxOpenID})
	if err != nil {
		return nil, err
	}

	if !ok {
		return &data.WxLoginResp{Found: ok}, nil
	}
	return &data.WxLoginResp{
		Found:    ok,
		Code:     mb.Code,
		WxOpenID: mb.WxOpenID,
		Level:    mb.Level,
		Status:   mb.Status,
	}, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
