// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package low

import (
	"context"

	"github.com/Khan/genqlient/graphql"
	"github.com/twiglab/crm/member/pkg/data"
)

// CreateWxMemberResponse is returned by CreateWxMember on success.
type CreateWxMemberResponse struct {
	CreateWxMember data.MemberResp `json:"createWxMember"`
}

// GetCreateWxMember returns CreateWxMemberResponse.CreateWxMember, and is useful for accessing the field via an interface.
func (v *CreateWxMemberResponse) GetCreateWxMember() data.MemberResp { return v.CreateWxMember }

// WxLoginResponse is returned by WxLogin on success.
type WxLoginResponse struct {
	WxLogin data.QryMemberResp `json:"wxLogin"`
}

// GetWxLogin returns WxLoginResponse.WxLogin, and is useful for accessing the field via an interface.
func (v *WxLoginResponse) GetWxLogin() data.QryMemberResp { return v.WxLogin }

// __CreateWxMemberInput is used internally by genqlient
type __CreateWxMemberInput struct {
	Input data.CreateWxMemberReq `json:"input"`
}

// GetInput returns __CreateWxMemberInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateWxMemberInput) GetInput() data.CreateWxMemberReq { return v.Input }

// __WxLoginInput is used internally by genqlient
type __WxLoginInput struct {
	Input data.OpenIDReq `json:"input"`
}

// GetInput returns __WxLoginInput.Input, and is useful for accessing the field via an interface.
func (v *__WxLoginInput) GetInput() data.OpenIDReq { return v.Input }

// The query or mutation executed by CreateWxMember.
const CreateWxMember_Operation = `
mutation CreateWxMember ($input: CreateWxMemberReq!) {
	createWxMember(input: $input) {
		code
		wxOpenID
	}
}
`

func CreateWxMember(
	ctx_ context.Context,
	client_ graphql.Client,
	input data.CreateWxMemberReq,
) (*CreateWxMemberResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateWxMember",
		Query:  CreateWxMember_Operation,
		Variables: &__CreateWxMemberInput{
			Input: input,
		},
	}
	var err_ error

	var data_ CreateWxMemberResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by WxLogin.
const WxLogin_Operation = `
mutation WxLogin ($input: OpenIDReq!) {
	wxLogin(input: $input) {
		code
		wxOpenID
		found
	}
}
`

func WxLogin(
	ctx_ context.Context,
	client_ graphql.Client,
	input data.OpenIDReq,
) (*WxLoginResponse, error) {
	req_ := &graphql.Request{
		OpName: "WxLogin",
		Query:  WxLogin_Operation,
		Variables: &__WxLoginInput{
			Input: input,
		},
	}
	var err_ error

	var data_ WxLoginResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
